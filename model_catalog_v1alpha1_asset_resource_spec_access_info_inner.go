/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogV1alpha1AssetResourceSpecAccessInfoInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1AssetResourceSpecAccessInfoInner{}

// CatalogV1alpha1AssetResourceSpecAccessInfoInner struct for CatalogV1alpha1AssetResourceSpecAccessInfoInner
type CatalogV1alpha1AssetResourceSpecAccessInfoInner struct {
	// url where the definition can be accessed.
	Url *string `json:"url,omitempty"`
	// description of the access information.
	Description *string `json:"description,omitempty"`
}

// NewCatalogV1alpha1AssetResourceSpecAccessInfoInner instantiates a new CatalogV1alpha1AssetResourceSpecAccessInfoInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1AssetResourceSpecAccessInfoInner() *CatalogV1alpha1AssetResourceSpecAccessInfoInner {
	this := CatalogV1alpha1AssetResourceSpecAccessInfoInner{}
	return &this
}

// NewCatalogV1alpha1AssetResourceSpecAccessInfoInnerWithDefaults instantiates a new CatalogV1alpha1AssetResourceSpecAccessInfoInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1AssetResourceSpecAccessInfoInnerWithDefaults() *CatalogV1alpha1AssetResourceSpecAccessInfoInner {
	this := CatalogV1alpha1AssetResourceSpecAccessInfoInner{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CatalogV1alpha1AssetResourceSpecAccessInfoInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1AssetResourceSpecAccessInfoInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CatalogV1alpha1AssetResourceSpecAccessInfoInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CatalogV1alpha1AssetResourceSpecAccessInfoInner) SetUrl(v string) {
	o.Url = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CatalogV1alpha1AssetResourceSpecAccessInfoInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1AssetResourceSpecAccessInfoInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogV1alpha1AssetResourceSpecAccessInfoInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CatalogV1alpha1AssetResourceSpecAccessInfoInner) SetDescription(v string) {
	o.Description = &v
}

func (o CatalogV1alpha1AssetResourceSpecAccessInfoInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1AssetResourceSpecAccessInfoInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableCatalogV1alpha1AssetResourceSpecAccessInfoInner struct {
	value *CatalogV1alpha1AssetResourceSpecAccessInfoInner
	isSet bool
}

func (v NullableCatalogV1alpha1AssetResourceSpecAccessInfoInner) Get() *CatalogV1alpha1AssetResourceSpecAccessInfoInner {
	return v.value
}

func (v *NullableCatalogV1alpha1AssetResourceSpecAccessInfoInner) Set(val *CatalogV1alpha1AssetResourceSpecAccessInfoInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1AssetResourceSpecAccessInfoInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1AssetResourceSpecAccessInfoInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1AssetResourceSpecAccessInfoInner(val *CatalogV1alpha1AssetResourceSpecAccessInfoInner) *NullableCatalogV1alpha1AssetResourceSpecAccessInfoInner {
	return &NullableCatalogV1alpha1AssetResourceSpecAccessInfoInner{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1AssetResourceSpecAccessInfoInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1AssetResourceSpecAccessInfoInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


