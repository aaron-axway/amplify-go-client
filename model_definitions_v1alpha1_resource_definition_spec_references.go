/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the DefinitionsV1alpha1ResourceDefinitionSpecReferences type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefinitionsV1alpha1ResourceDefinitionSpecReferences{}

// DefinitionsV1alpha1ResourceDefinitionSpecReferences struct for DefinitionsV1alpha1ResourceDefinitionSpecReferences
type DefinitionsV1alpha1ResourceDefinitionSpecReferences struct {
	// A list of resources that the current resources has references to.
	ToResources []DefinitionsV1alpha1ResourceDefinitionSpecReferencesToResourcesInner `json:"toResources,omitempty"`
	// A list of resources that the current resources is beging referenced from.
	FromResources []DefinitionsV1alpha1ResourceDefinitionSpecReferencesFromResourcesInner `json:"fromResources,omitempty"`
}

// NewDefinitionsV1alpha1ResourceDefinitionSpecReferences instantiates a new DefinitionsV1alpha1ResourceDefinitionSpecReferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefinitionsV1alpha1ResourceDefinitionSpecReferences() *DefinitionsV1alpha1ResourceDefinitionSpecReferences {
	this := DefinitionsV1alpha1ResourceDefinitionSpecReferences{}
	return &this
}

// NewDefinitionsV1alpha1ResourceDefinitionSpecReferencesWithDefaults instantiates a new DefinitionsV1alpha1ResourceDefinitionSpecReferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefinitionsV1alpha1ResourceDefinitionSpecReferencesWithDefaults() *DefinitionsV1alpha1ResourceDefinitionSpecReferences {
	this := DefinitionsV1alpha1ResourceDefinitionSpecReferences{}
	return &this
}

// GetToResources returns the ToResources field value if set, zero value otherwise.
func (o *DefinitionsV1alpha1ResourceDefinitionSpecReferences) GetToResources() []DefinitionsV1alpha1ResourceDefinitionSpecReferencesToResourcesInner {
	if o == nil || IsNil(o.ToResources) {
		var ret []DefinitionsV1alpha1ResourceDefinitionSpecReferencesToResourcesInner
		return ret
	}
	return o.ToResources
}

// GetToResourcesOk returns a tuple with the ToResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinitionsV1alpha1ResourceDefinitionSpecReferences) GetToResourcesOk() ([]DefinitionsV1alpha1ResourceDefinitionSpecReferencesToResourcesInner, bool) {
	if o == nil || IsNil(o.ToResources) {
		return nil, false
	}
	return o.ToResources, true
}

// HasToResources returns a boolean if a field has been set.
func (o *DefinitionsV1alpha1ResourceDefinitionSpecReferences) HasToResources() bool {
	if o != nil && !IsNil(o.ToResources) {
		return true
	}

	return false
}

// SetToResources gets a reference to the given []DefinitionsV1alpha1ResourceDefinitionSpecReferencesToResourcesInner and assigns it to the ToResources field.
func (o *DefinitionsV1alpha1ResourceDefinitionSpecReferences) SetToResources(v []DefinitionsV1alpha1ResourceDefinitionSpecReferencesToResourcesInner) {
	o.ToResources = v
}

// GetFromResources returns the FromResources field value if set, zero value otherwise.
func (o *DefinitionsV1alpha1ResourceDefinitionSpecReferences) GetFromResources() []DefinitionsV1alpha1ResourceDefinitionSpecReferencesFromResourcesInner {
	if o == nil || IsNil(o.FromResources) {
		var ret []DefinitionsV1alpha1ResourceDefinitionSpecReferencesFromResourcesInner
		return ret
	}
	return o.FromResources
}

// GetFromResourcesOk returns a tuple with the FromResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinitionsV1alpha1ResourceDefinitionSpecReferences) GetFromResourcesOk() ([]DefinitionsV1alpha1ResourceDefinitionSpecReferencesFromResourcesInner, bool) {
	if o == nil || IsNil(o.FromResources) {
		return nil, false
	}
	return o.FromResources, true
}

// HasFromResources returns a boolean if a field has been set.
func (o *DefinitionsV1alpha1ResourceDefinitionSpecReferences) HasFromResources() bool {
	if o != nil && !IsNil(o.FromResources) {
		return true
	}

	return false
}

// SetFromResources gets a reference to the given []DefinitionsV1alpha1ResourceDefinitionSpecReferencesFromResourcesInner and assigns it to the FromResources field.
func (o *DefinitionsV1alpha1ResourceDefinitionSpecReferences) SetFromResources(v []DefinitionsV1alpha1ResourceDefinitionSpecReferencesFromResourcesInner) {
	o.FromResources = v
}

func (o DefinitionsV1alpha1ResourceDefinitionSpecReferences) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefinitionsV1alpha1ResourceDefinitionSpecReferences) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ToResources) {
		toSerialize["toResources"] = o.ToResources
	}
	if !IsNil(o.FromResources) {
		toSerialize["fromResources"] = o.FromResources
	}
	return toSerialize, nil
}

type NullableDefinitionsV1alpha1ResourceDefinitionSpecReferences struct {
	value *DefinitionsV1alpha1ResourceDefinitionSpecReferences
	isSet bool
}

func (v NullableDefinitionsV1alpha1ResourceDefinitionSpecReferences) Get() *DefinitionsV1alpha1ResourceDefinitionSpecReferences {
	return v.value
}

func (v *NullableDefinitionsV1alpha1ResourceDefinitionSpecReferences) Set(val *DefinitionsV1alpha1ResourceDefinitionSpecReferences) {
	v.value = val
	v.isSet = true
}

func (v NullableDefinitionsV1alpha1ResourceDefinitionSpecReferences) IsSet() bool {
	return v.isSet
}

func (v *NullableDefinitionsV1alpha1ResourceDefinitionSpecReferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefinitionsV1alpha1ResourceDefinitionSpecReferences(val *DefinitionsV1alpha1ResourceDefinitionSpecReferences) *NullableDefinitionsV1alpha1ResourceDefinitionSpecReferences {
	return &NullableDefinitionsV1alpha1ResourceDefinitionSpecReferences{value: val, isSet: true}
}

func (v NullableDefinitionsV1alpha1ResourceDefinitionSpecReferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefinitionsV1alpha1ResourceDefinitionSpecReferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


