/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner{}

// CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner struct for CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner
type CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner struct {
	// The start of the interval.
	From time.Time `json:"from"`
	// Number of consumed units in the interval.
	Units int32 `json:"units"`
	// In case the item is from a prior invoice for the same quota. Prior invoice items are included if the first item is not for the complete quota interval.
	PreviousInvoiceItem *bool `json:"previousInvoiceItem,omitempty"`
}

type _CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner

// NewCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner instantiates a new CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner(from time.Time, units int32) *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner {
	this := CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner{}
	this.From = from
	this.Units = units
	return &this
}

// NewCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInnerWithDefaults instantiates a new CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInnerWithDefaults() *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner {
	this := CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner{}
	return &this
}

// GetFrom returns the From field value
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) GetFrom() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) GetFromOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) SetFrom(v time.Time) {
	o.From = v
}

// GetUnits returns the Units field value
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) GetUnits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Units
}

// GetUnitsOk returns a tuple with the Units field value
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) GetUnitsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Units, true
}

// SetUnits sets field value
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) SetUnits(v int32) {
	o.Units = v
}

// GetPreviousInvoiceItem returns the PreviousInvoiceItem field value if set, zero value otherwise.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) GetPreviousInvoiceItem() bool {
	if o == nil || IsNil(o.PreviousInvoiceItem) {
		var ret bool
		return ret
	}
	return *o.PreviousInvoiceItem
}

// GetPreviousInvoiceItemOk returns a tuple with the PreviousInvoiceItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) GetPreviousInvoiceItemOk() (*bool, bool) {
	if o == nil || IsNil(o.PreviousInvoiceItem) {
		return nil, false
	}
	return o.PreviousInvoiceItem, true
}

// HasPreviousInvoiceItem returns a boolean if a field has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) HasPreviousInvoiceItem() bool {
	if o != nil && !IsNil(o.PreviousInvoiceItem) {
		return true
	}

	return false
}

// SetPreviousInvoiceItem gets a reference to the given bool and assigns it to the PreviousInvoiceItem field.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) SetPreviousInvoiceItem(v bool) {
	o.PreviousInvoiceItem = &v
}

func (o CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["from"] = o.From
	toSerialize["units"] = o.Units
	if !IsNil(o.PreviousInvoiceItem) {
		toSerialize["previousInvoiceItem"] = o.PreviousInvoiceItem
	}
	return toSerialize, nil
}

func (o *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"from",
		"units",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner := _CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner)

	if err != nil {
		return err
	}

	*o = CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner(varCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner)

	return err
}

type NullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner struct {
	value *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner
	isSet bool
}

func (v NullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) Get() *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner {
	return v.value
}

func (v *NullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) Set(val *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner(val *CatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) *NullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner {
	return &NullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1SubscriptionInvoiceSpecQuotasInnerIntervalsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


