/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// ManagementV1alpha1AccessRequestReferencesInner - struct for ManagementV1alpha1AccessRequestReferencesInner
type ManagementV1alpha1AccessRequestReferencesInner struct {
	ManagementV1alpha1AccessRequestReferencesApplication *ManagementV1alpha1AccessRequestReferencesApplication
	ManagementV1alpha1AccessRequestReferencesAssetRequest *ManagementV1alpha1AccessRequestReferencesAssetRequest
	ManagementV1alpha1AccessRequestReferencesAssetResource *ManagementV1alpha1AccessRequestReferencesAssetResource
	ManagementV1alpha1AccessRequestReferencesProduct *ManagementV1alpha1AccessRequestReferencesProduct
	ManagementV1alpha1AccessRequestReferencesProductPlan *ManagementV1alpha1AccessRequestReferencesProductPlan
	ManagementV1alpha1AccessRequestReferencesProductRelease *ManagementV1alpha1AccessRequestReferencesProductRelease
	ManagementV1alpha1AccessRequestReferencesPublishedProduct *ManagementV1alpha1AccessRequestReferencesPublishedProduct
	ManagementV1alpha1AccessRequestReferencesQuota *ManagementV1alpha1AccessRequestReferencesQuota
	ManagementV1alpha1AccessRequestReferencesSubscription *ManagementV1alpha1AccessRequestReferencesSubscription
}

// ManagementV1alpha1AccessRequestReferencesApplicationAsManagementV1alpha1AccessRequestReferencesInner is a convenience function that returns ManagementV1alpha1AccessRequestReferencesApplication wrapped in ManagementV1alpha1AccessRequestReferencesInner
func ManagementV1alpha1AccessRequestReferencesApplicationAsManagementV1alpha1AccessRequestReferencesInner(v *ManagementV1alpha1AccessRequestReferencesApplication) ManagementV1alpha1AccessRequestReferencesInner {
	return ManagementV1alpha1AccessRequestReferencesInner{
		ManagementV1alpha1AccessRequestReferencesApplication: v,
	}
}

// ManagementV1alpha1AccessRequestReferencesAssetRequestAsManagementV1alpha1AccessRequestReferencesInner is a convenience function that returns ManagementV1alpha1AccessRequestReferencesAssetRequest wrapped in ManagementV1alpha1AccessRequestReferencesInner
func ManagementV1alpha1AccessRequestReferencesAssetRequestAsManagementV1alpha1AccessRequestReferencesInner(v *ManagementV1alpha1AccessRequestReferencesAssetRequest) ManagementV1alpha1AccessRequestReferencesInner {
	return ManagementV1alpha1AccessRequestReferencesInner{
		ManagementV1alpha1AccessRequestReferencesAssetRequest: v,
	}
}

// ManagementV1alpha1AccessRequestReferencesAssetResourceAsManagementV1alpha1AccessRequestReferencesInner is a convenience function that returns ManagementV1alpha1AccessRequestReferencesAssetResource wrapped in ManagementV1alpha1AccessRequestReferencesInner
func ManagementV1alpha1AccessRequestReferencesAssetResourceAsManagementV1alpha1AccessRequestReferencesInner(v *ManagementV1alpha1AccessRequestReferencesAssetResource) ManagementV1alpha1AccessRequestReferencesInner {
	return ManagementV1alpha1AccessRequestReferencesInner{
		ManagementV1alpha1AccessRequestReferencesAssetResource: v,
	}
}

// ManagementV1alpha1AccessRequestReferencesProductAsManagementV1alpha1AccessRequestReferencesInner is a convenience function that returns ManagementV1alpha1AccessRequestReferencesProduct wrapped in ManagementV1alpha1AccessRequestReferencesInner
func ManagementV1alpha1AccessRequestReferencesProductAsManagementV1alpha1AccessRequestReferencesInner(v *ManagementV1alpha1AccessRequestReferencesProduct) ManagementV1alpha1AccessRequestReferencesInner {
	return ManagementV1alpha1AccessRequestReferencesInner{
		ManagementV1alpha1AccessRequestReferencesProduct: v,
	}
}

// ManagementV1alpha1AccessRequestReferencesProductPlanAsManagementV1alpha1AccessRequestReferencesInner is a convenience function that returns ManagementV1alpha1AccessRequestReferencesProductPlan wrapped in ManagementV1alpha1AccessRequestReferencesInner
func ManagementV1alpha1AccessRequestReferencesProductPlanAsManagementV1alpha1AccessRequestReferencesInner(v *ManagementV1alpha1AccessRequestReferencesProductPlan) ManagementV1alpha1AccessRequestReferencesInner {
	return ManagementV1alpha1AccessRequestReferencesInner{
		ManagementV1alpha1AccessRequestReferencesProductPlan: v,
	}
}

// ManagementV1alpha1AccessRequestReferencesProductReleaseAsManagementV1alpha1AccessRequestReferencesInner is a convenience function that returns ManagementV1alpha1AccessRequestReferencesProductRelease wrapped in ManagementV1alpha1AccessRequestReferencesInner
func ManagementV1alpha1AccessRequestReferencesProductReleaseAsManagementV1alpha1AccessRequestReferencesInner(v *ManagementV1alpha1AccessRequestReferencesProductRelease) ManagementV1alpha1AccessRequestReferencesInner {
	return ManagementV1alpha1AccessRequestReferencesInner{
		ManagementV1alpha1AccessRequestReferencesProductRelease: v,
	}
}

// ManagementV1alpha1AccessRequestReferencesPublishedProductAsManagementV1alpha1AccessRequestReferencesInner is a convenience function that returns ManagementV1alpha1AccessRequestReferencesPublishedProduct wrapped in ManagementV1alpha1AccessRequestReferencesInner
func ManagementV1alpha1AccessRequestReferencesPublishedProductAsManagementV1alpha1AccessRequestReferencesInner(v *ManagementV1alpha1AccessRequestReferencesPublishedProduct) ManagementV1alpha1AccessRequestReferencesInner {
	return ManagementV1alpha1AccessRequestReferencesInner{
		ManagementV1alpha1AccessRequestReferencesPublishedProduct: v,
	}
}

// ManagementV1alpha1AccessRequestReferencesQuotaAsManagementV1alpha1AccessRequestReferencesInner is a convenience function that returns ManagementV1alpha1AccessRequestReferencesQuota wrapped in ManagementV1alpha1AccessRequestReferencesInner
func ManagementV1alpha1AccessRequestReferencesQuotaAsManagementV1alpha1AccessRequestReferencesInner(v *ManagementV1alpha1AccessRequestReferencesQuota) ManagementV1alpha1AccessRequestReferencesInner {
	return ManagementV1alpha1AccessRequestReferencesInner{
		ManagementV1alpha1AccessRequestReferencesQuota: v,
	}
}

// ManagementV1alpha1AccessRequestReferencesSubscriptionAsManagementV1alpha1AccessRequestReferencesInner is a convenience function that returns ManagementV1alpha1AccessRequestReferencesSubscription wrapped in ManagementV1alpha1AccessRequestReferencesInner
func ManagementV1alpha1AccessRequestReferencesSubscriptionAsManagementV1alpha1AccessRequestReferencesInner(v *ManagementV1alpha1AccessRequestReferencesSubscription) ManagementV1alpha1AccessRequestReferencesInner {
	return ManagementV1alpha1AccessRequestReferencesInner{
		ManagementV1alpha1AccessRequestReferencesSubscription: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ManagementV1alpha1AccessRequestReferencesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ManagementV1alpha1AccessRequestReferencesApplication
	err = newStrictDecoder(data).Decode(&dst.ManagementV1alpha1AccessRequestReferencesApplication)
	if err == nil {
		jsonManagementV1alpha1AccessRequestReferencesApplication, _ := json.Marshal(dst.ManagementV1alpha1AccessRequestReferencesApplication)
		if string(jsonManagementV1alpha1AccessRequestReferencesApplication) == "{}" { // empty struct
			dst.ManagementV1alpha1AccessRequestReferencesApplication = nil
		} else {
			if err = validator.Validate(dst.ManagementV1alpha1AccessRequestReferencesApplication); err != nil {
				dst.ManagementV1alpha1AccessRequestReferencesApplication = nil
			} else {
				match++
			}
		}
	} else {
		dst.ManagementV1alpha1AccessRequestReferencesApplication = nil
	}

	// try to unmarshal data into ManagementV1alpha1AccessRequestReferencesAssetRequest
	err = newStrictDecoder(data).Decode(&dst.ManagementV1alpha1AccessRequestReferencesAssetRequest)
	if err == nil {
		jsonManagementV1alpha1AccessRequestReferencesAssetRequest, _ := json.Marshal(dst.ManagementV1alpha1AccessRequestReferencesAssetRequest)
		if string(jsonManagementV1alpha1AccessRequestReferencesAssetRequest) == "{}" { // empty struct
			dst.ManagementV1alpha1AccessRequestReferencesAssetRequest = nil
		} else {
			if err = validator.Validate(dst.ManagementV1alpha1AccessRequestReferencesAssetRequest); err != nil {
				dst.ManagementV1alpha1AccessRequestReferencesAssetRequest = nil
			} else {
				match++
			}
		}
	} else {
		dst.ManagementV1alpha1AccessRequestReferencesAssetRequest = nil
	}

	// try to unmarshal data into ManagementV1alpha1AccessRequestReferencesAssetResource
	err = newStrictDecoder(data).Decode(&dst.ManagementV1alpha1AccessRequestReferencesAssetResource)
	if err == nil {
		jsonManagementV1alpha1AccessRequestReferencesAssetResource, _ := json.Marshal(dst.ManagementV1alpha1AccessRequestReferencesAssetResource)
		if string(jsonManagementV1alpha1AccessRequestReferencesAssetResource) == "{}" { // empty struct
			dst.ManagementV1alpha1AccessRequestReferencesAssetResource = nil
		} else {
			if err = validator.Validate(dst.ManagementV1alpha1AccessRequestReferencesAssetResource); err != nil {
				dst.ManagementV1alpha1AccessRequestReferencesAssetResource = nil
			} else {
				match++
			}
		}
	} else {
		dst.ManagementV1alpha1AccessRequestReferencesAssetResource = nil
	}

	// try to unmarshal data into ManagementV1alpha1AccessRequestReferencesProduct
	err = newStrictDecoder(data).Decode(&dst.ManagementV1alpha1AccessRequestReferencesProduct)
	if err == nil {
		jsonManagementV1alpha1AccessRequestReferencesProduct, _ := json.Marshal(dst.ManagementV1alpha1AccessRequestReferencesProduct)
		if string(jsonManagementV1alpha1AccessRequestReferencesProduct) == "{}" { // empty struct
			dst.ManagementV1alpha1AccessRequestReferencesProduct = nil
		} else {
			if err = validator.Validate(dst.ManagementV1alpha1AccessRequestReferencesProduct); err != nil {
				dst.ManagementV1alpha1AccessRequestReferencesProduct = nil
			} else {
				match++
			}
		}
	} else {
		dst.ManagementV1alpha1AccessRequestReferencesProduct = nil
	}

	// try to unmarshal data into ManagementV1alpha1AccessRequestReferencesProductPlan
	err = newStrictDecoder(data).Decode(&dst.ManagementV1alpha1AccessRequestReferencesProductPlan)
	if err == nil {
		jsonManagementV1alpha1AccessRequestReferencesProductPlan, _ := json.Marshal(dst.ManagementV1alpha1AccessRequestReferencesProductPlan)
		if string(jsonManagementV1alpha1AccessRequestReferencesProductPlan) == "{}" { // empty struct
			dst.ManagementV1alpha1AccessRequestReferencesProductPlan = nil
		} else {
			if err = validator.Validate(dst.ManagementV1alpha1AccessRequestReferencesProductPlan); err != nil {
				dst.ManagementV1alpha1AccessRequestReferencesProductPlan = nil
			} else {
				match++
			}
		}
	} else {
		dst.ManagementV1alpha1AccessRequestReferencesProductPlan = nil
	}

	// try to unmarshal data into ManagementV1alpha1AccessRequestReferencesProductRelease
	err = newStrictDecoder(data).Decode(&dst.ManagementV1alpha1AccessRequestReferencesProductRelease)
	if err == nil {
		jsonManagementV1alpha1AccessRequestReferencesProductRelease, _ := json.Marshal(dst.ManagementV1alpha1AccessRequestReferencesProductRelease)
		if string(jsonManagementV1alpha1AccessRequestReferencesProductRelease) == "{}" { // empty struct
			dst.ManagementV1alpha1AccessRequestReferencesProductRelease = nil
		} else {
			if err = validator.Validate(dst.ManagementV1alpha1AccessRequestReferencesProductRelease); err != nil {
				dst.ManagementV1alpha1AccessRequestReferencesProductRelease = nil
			} else {
				match++
			}
		}
	} else {
		dst.ManagementV1alpha1AccessRequestReferencesProductRelease = nil
	}

	// try to unmarshal data into ManagementV1alpha1AccessRequestReferencesPublishedProduct
	err = newStrictDecoder(data).Decode(&dst.ManagementV1alpha1AccessRequestReferencesPublishedProduct)
	if err == nil {
		jsonManagementV1alpha1AccessRequestReferencesPublishedProduct, _ := json.Marshal(dst.ManagementV1alpha1AccessRequestReferencesPublishedProduct)
		if string(jsonManagementV1alpha1AccessRequestReferencesPublishedProduct) == "{}" { // empty struct
			dst.ManagementV1alpha1AccessRequestReferencesPublishedProduct = nil
		} else {
			if err = validator.Validate(dst.ManagementV1alpha1AccessRequestReferencesPublishedProduct); err != nil {
				dst.ManagementV1alpha1AccessRequestReferencesPublishedProduct = nil
			} else {
				match++
			}
		}
	} else {
		dst.ManagementV1alpha1AccessRequestReferencesPublishedProduct = nil
	}

	// try to unmarshal data into ManagementV1alpha1AccessRequestReferencesQuota
	err = newStrictDecoder(data).Decode(&dst.ManagementV1alpha1AccessRequestReferencesQuota)
	if err == nil {
		jsonManagementV1alpha1AccessRequestReferencesQuota, _ := json.Marshal(dst.ManagementV1alpha1AccessRequestReferencesQuota)
		if string(jsonManagementV1alpha1AccessRequestReferencesQuota) == "{}" { // empty struct
			dst.ManagementV1alpha1AccessRequestReferencesQuota = nil
		} else {
			if err = validator.Validate(dst.ManagementV1alpha1AccessRequestReferencesQuota); err != nil {
				dst.ManagementV1alpha1AccessRequestReferencesQuota = nil
			} else {
				match++
			}
		}
	} else {
		dst.ManagementV1alpha1AccessRequestReferencesQuota = nil
	}

	// try to unmarshal data into ManagementV1alpha1AccessRequestReferencesSubscription
	err = newStrictDecoder(data).Decode(&dst.ManagementV1alpha1AccessRequestReferencesSubscription)
	if err == nil {
		jsonManagementV1alpha1AccessRequestReferencesSubscription, _ := json.Marshal(dst.ManagementV1alpha1AccessRequestReferencesSubscription)
		if string(jsonManagementV1alpha1AccessRequestReferencesSubscription) == "{}" { // empty struct
			dst.ManagementV1alpha1AccessRequestReferencesSubscription = nil
		} else {
			if err = validator.Validate(dst.ManagementV1alpha1AccessRequestReferencesSubscription); err != nil {
				dst.ManagementV1alpha1AccessRequestReferencesSubscription = nil
			} else {
				match++
			}
		}
	} else {
		dst.ManagementV1alpha1AccessRequestReferencesSubscription = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ManagementV1alpha1AccessRequestReferencesApplication = nil
		dst.ManagementV1alpha1AccessRequestReferencesAssetRequest = nil
		dst.ManagementV1alpha1AccessRequestReferencesAssetResource = nil
		dst.ManagementV1alpha1AccessRequestReferencesProduct = nil
		dst.ManagementV1alpha1AccessRequestReferencesProductPlan = nil
		dst.ManagementV1alpha1AccessRequestReferencesProductRelease = nil
		dst.ManagementV1alpha1AccessRequestReferencesPublishedProduct = nil
		dst.ManagementV1alpha1AccessRequestReferencesQuota = nil
		dst.ManagementV1alpha1AccessRequestReferencesSubscription = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ManagementV1alpha1AccessRequestReferencesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ManagementV1alpha1AccessRequestReferencesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ManagementV1alpha1AccessRequestReferencesInner) MarshalJSON() ([]byte, error) {
	if src.ManagementV1alpha1AccessRequestReferencesApplication != nil {
		return json.Marshal(&src.ManagementV1alpha1AccessRequestReferencesApplication)
	}

	if src.ManagementV1alpha1AccessRequestReferencesAssetRequest != nil {
		return json.Marshal(&src.ManagementV1alpha1AccessRequestReferencesAssetRequest)
	}

	if src.ManagementV1alpha1AccessRequestReferencesAssetResource != nil {
		return json.Marshal(&src.ManagementV1alpha1AccessRequestReferencesAssetResource)
	}

	if src.ManagementV1alpha1AccessRequestReferencesProduct != nil {
		return json.Marshal(&src.ManagementV1alpha1AccessRequestReferencesProduct)
	}

	if src.ManagementV1alpha1AccessRequestReferencesProductPlan != nil {
		return json.Marshal(&src.ManagementV1alpha1AccessRequestReferencesProductPlan)
	}

	if src.ManagementV1alpha1AccessRequestReferencesProductRelease != nil {
		return json.Marshal(&src.ManagementV1alpha1AccessRequestReferencesProductRelease)
	}

	if src.ManagementV1alpha1AccessRequestReferencesPublishedProduct != nil {
		return json.Marshal(&src.ManagementV1alpha1AccessRequestReferencesPublishedProduct)
	}

	if src.ManagementV1alpha1AccessRequestReferencesQuota != nil {
		return json.Marshal(&src.ManagementV1alpha1AccessRequestReferencesQuota)
	}

	if src.ManagementV1alpha1AccessRequestReferencesSubscription != nil {
		return json.Marshal(&src.ManagementV1alpha1AccessRequestReferencesSubscription)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ManagementV1alpha1AccessRequestReferencesInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ManagementV1alpha1AccessRequestReferencesApplication != nil {
		return obj.ManagementV1alpha1AccessRequestReferencesApplication
	}

	if obj.ManagementV1alpha1AccessRequestReferencesAssetRequest != nil {
		return obj.ManagementV1alpha1AccessRequestReferencesAssetRequest
	}

	if obj.ManagementV1alpha1AccessRequestReferencesAssetResource != nil {
		return obj.ManagementV1alpha1AccessRequestReferencesAssetResource
	}

	if obj.ManagementV1alpha1AccessRequestReferencesProduct != nil {
		return obj.ManagementV1alpha1AccessRequestReferencesProduct
	}

	if obj.ManagementV1alpha1AccessRequestReferencesProductPlan != nil {
		return obj.ManagementV1alpha1AccessRequestReferencesProductPlan
	}

	if obj.ManagementV1alpha1AccessRequestReferencesProductRelease != nil {
		return obj.ManagementV1alpha1AccessRequestReferencesProductRelease
	}

	if obj.ManagementV1alpha1AccessRequestReferencesPublishedProduct != nil {
		return obj.ManagementV1alpha1AccessRequestReferencesPublishedProduct
	}

	if obj.ManagementV1alpha1AccessRequestReferencesQuota != nil {
		return obj.ManagementV1alpha1AccessRequestReferencesQuota
	}

	if obj.ManagementV1alpha1AccessRequestReferencesSubscription != nil {
		return obj.ManagementV1alpha1AccessRequestReferencesSubscription
	}

	// all schemas are nil
	return nil
}

type NullableManagementV1alpha1AccessRequestReferencesInner struct {
	value *ManagementV1alpha1AccessRequestReferencesInner
	isSet bool
}

func (v NullableManagementV1alpha1AccessRequestReferencesInner) Get() *ManagementV1alpha1AccessRequestReferencesInner {
	return v.value
}

func (v *NullableManagementV1alpha1AccessRequestReferencesInner) Set(val *ManagementV1alpha1AccessRequestReferencesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1AccessRequestReferencesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1AccessRequestReferencesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1AccessRequestReferencesInner(val *ManagementV1alpha1AccessRequestReferencesInner) *NullableManagementV1alpha1AccessRequestReferencesInner {
	return &NullableManagementV1alpha1AccessRequestReferencesInner{value: val, isSet: true}
}

func (v NullableManagementV1alpha1AccessRequestReferencesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1AccessRequestReferencesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


