/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1EnvironmentPolicies type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1EnvironmentPolicies{}

// ManagementV1alpha1EnvironmentPolicies struct for ManagementV1alpha1EnvironmentPolicies
type ManagementV1alpha1EnvironmentPolicies struct {
	Credentials *ManagementV1alpha1EnvironmentPoliciesCredentials `json:"credentials,omitempty"`
}

// NewManagementV1alpha1EnvironmentPolicies instantiates a new ManagementV1alpha1EnvironmentPolicies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1EnvironmentPolicies() *ManagementV1alpha1EnvironmentPolicies {
	this := ManagementV1alpha1EnvironmentPolicies{}
	return &this
}

// NewManagementV1alpha1EnvironmentPoliciesWithDefaults instantiates a new ManagementV1alpha1EnvironmentPolicies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1EnvironmentPoliciesWithDefaults() *ManagementV1alpha1EnvironmentPolicies {
	this := ManagementV1alpha1EnvironmentPolicies{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *ManagementV1alpha1EnvironmentPolicies) GetCredentials() ManagementV1alpha1EnvironmentPoliciesCredentials {
	if o == nil || IsNil(o.Credentials) {
		var ret ManagementV1alpha1EnvironmentPoliciesCredentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1EnvironmentPolicies) GetCredentialsOk() (*ManagementV1alpha1EnvironmentPoliciesCredentials, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *ManagementV1alpha1EnvironmentPolicies) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given ManagementV1alpha1EnvironmentPoliciesCredentials and assigns it to the Credentials field.
func (o *ManagementV1alpha1EnvironmentPolicies) SetCredentials(v ManagementV1alpha1EnvironmentPoliciesCredentials) {
	o.Credentials = &v
}

func (o ManagementV1alpha1EnvironmentPolicies) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1EnvironmentPolicies) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1EnvironmentPolicies struct {
	value *ManagementV1alpha1EnvironmentPolicies
	isSet bool
}

func (v NullableManagementV1alpha1EnvironmentPolicies) Get() *ManagementV1alpha1EnvironmentPolicies {
	return v.value
}

func (v *NullableManagementV1alpha1EnvironmentPolicies) Set(val *ManagementV1alpha1EnvironmentPolicies) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1EnvironmentPolicies) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1EnvironmentPolicies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1EnvironmentPolicies(val *ManagementV1alpha1EnvironmentPolicies) *NullableManagementV1alpha1EnvironmentPolicies {
	return &NullableManagementV1alpha1EnvironmentPolicies{value: val, isSet: true}
}

func (v NullableManagementV1alpha1EnvironmentPolicies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1EnvironmentPolicies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


