/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the CatalogV1ProductSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1ProductSpec{}

// CatalogV1ProductSpec struct for CatalogV1ProductSpec
type CatalogV1ProductSpec struct {
	// Description of the Product.
	Description *string `json:"description,omitempty"`
	SupportContact *string `json:"supportContact,omitempty"`
	Categories []string `json:"categories,omitempty"`
	// Defines all the Assets that the Product will be built from.
	Assets []CatalogV1ProductSpecAssetsInner `json:"assets,omitempty"`
	AutoRelease *CatalogV1ProductSpecAutoRelease `json:"autoRelease,omitempty"`
}

// NewCatalogV1ProductSpec instantiates a new CatalogV1ProductSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1ProductSpec() *CatalogV1ProductSpec {
	this := CatalogV1ProductSpec{}
	return &this
}

// NewCatalogV1ProductSpecWithDefaults instantiates a new CatalogV1ProductSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1ProductSpecWithDefaults() *CatalogV1ProductSpec {
	this := CatalogV1ProductSpec{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CatalogV1ProductSpec) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1ProductSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogV1ProductSpec) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CatalogV1ProductSpec) SetDescription(v string) {
	o.Description = &v
}

// GetSupportContact returns the SupportContact field value if set, zero value otherwise.
func (o *CatalogV1ProductSpec) GetSupportContact() string {
	if o == nil || IsNil(o.SupportContact) {
		var ret string
		return ret
	}
	return *o.SupportContact
}

// GetSupportContactOk returns a tuple with the SupportContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1ProductSpec) GetSupportContactOk() (*string, bool) {
	if o == nil || IsNil(o.SupportContact) {
		return nil, false
	}
	return o.SupportContact, true
}

// HasSupportContact returns a boolean if a field has been set.
func (o *CatalogV1ProductSpec) HasSupportContact() bool {
	if o != nil && !IsNil(o.SupportContact) {
		return true
	}

	return false
}

// SetSupportContact gets a reference to the given string and assigns it to the SupportContact field.
func (o *CatalogV1ProductSpec) SetSupportContact(v string) {
	o.SupportContact = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *CatalogV1ProductSpec) GetCategories() []string {
	if o == nil || IsNil(o.Categories) {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1ProductSpec) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *CatalogV1ProductSpec) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *CatalogV1ProductSpec) SetCategories(v []string) {
	o.Categories = v
}

// GetAssets returns the Assets field value if set, zero value otherwise.
func (o *CatalogV1ProductSpec) GetAssets() []CatalogV1ProductSpecAssetsInner {
	if o == nil || IsNil(o.Assets) {
		var ret []CatalogV1ProductSpecAssetsInner
		return ret
	}
	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1ProductSpec) GetAssetsOk() ([]CatalogV1ProductSpecAssetsInner, bool) {
	if o == nil || IsNil(o.Assets) {
		return nil, false
	}
	return o.Assets, true
}

// HasAssets returns a boolean if a field has been set.
func (o *CatalogV1ProductSpec) HasAssets() bool {
	if o != nil && !IsNil(o.Assets) {
		return true
	}

	return false
}

// SetAssets gets a reference to the given []CatalogV1ProductSpecAssetsInner and assigns it to the Assets field.
func (o *CatalogV1ProductSpec) SetAssets(v []CatalogV1ProductSpecAssetsInner) {
	o.Assets = v
}

// GetAutoRelease returns the AutoRelease field value if set, zero value otherwise.
func (o *CatalogV1ProductSpec) GetAutoRelease() CatalogV1ProductSpecAutoRelease {
	if o == nil || IsNil(o.AutoRelease) {
		var ret CatalogV1ProductSpecAutoRelease
		return ret
	}
	return *o.AutoRelease
}

// GetAutoReleaseOk returns a tuple with the AutoRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1ProductSpec) GetAutoReleaseOk() (*CatalogV1ProductSpecAutoRelease, bool) {
	if o == nil || IsNil(o.AutoRelease) {
		return nil, false
	}
	return o.AutoRelease, true
}

// HasAutoRelease returns a boolean if a field has been set.
func (o *CatalogV1ProductSpec) HasAutoRelease() bool {
	if o != nil && !IsNil(o.AutoRelease) {
		return true
	}

	return false
}

// SetAutoRelease gets a reference to the given CatalogV1ProductSpecAutoRelease and assigns it to the AutoRelease field.
func (o *CatalogV1ProductSpec) SetAutoRelease(v CatalogV1ProductSpecAutoRelease) {
	o.AutoRelease = &v
}

func (o CatalogV1ProductSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1ProductSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.SupportContact) {
		toSerialize["supportContact"] = o.SupportContact
	}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.Assets) {
		toSerialize["assets"] = o.Assets
	}
	if !IsNil(o.AutoRelease) {
		toSerialize["autoRelease"] = o.AutoRelease
	}
	return toSerialize, nil
}

type NullableCatalogV1ProductSpec struct {
	value *CatalogV1ProductSpec
	isSet bool
}

func (v NullableCatalogV1ProductSpec) Get() *CatalogV1ProductSpec {
	return v.value
}

func (v *NullableCatalogV1ProductSpec) Set(val *CatalogV1ProductSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1ProductSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1ProductSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1ProductSpec(val *CatalogV1ProductSpec) *NullableCatalogV1ProductSpec {
	return &NullableCatalogV1ProductSpec{value: val, isSet: true}
}

func (v NullableCatalogV1ProductSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1ProductSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


