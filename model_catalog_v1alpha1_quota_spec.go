/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogV1alpha1QuotaSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1QuotaSpec{}

// CatalogV1alpha1QuotaSpec struct for CatalogV1alpha1QuotaSpec
type CatalogV1alpha1QuotaSpec struct {
	// description of the quota.
	Description *string `json:"description,omitempty"`
	// The unit used to measure the access to the resource.
	Unit string `json:"unit"`
	Pricing CatalogV1alpha1QuotaSpecPricing `json:"pricing"`
	// The resources that the access is being granted to.
	Resources []CatalogV1alpha1QuotaSpecResourcesInner `json:"resources"`
}

type _CatalogV1alpha1QuotaSpec CatalogV1alpha1QuotaSpec

// NewCatalogV1alpha1QuotaSpec instantiates a new CatalogV1alpha1QuotaSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1QuotaSpec(unit string, pricing CatalogV1alpha1QuotaSpecPricing, resources []CatalogV1alpha1QuotaSpecResourcesInner) *CatalogV1alpha1QuotaSpec {
	this := CatalogV1alpha1QuotaSpec{}
	this.Unit = unit
	this.Pricing = pricing
	this.Resources = resources
	return &this
}

// NewCatalogV1alpha1QuotaSpecWithDefaults instantiates a new CatalogV1alpha1QuotaSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1QuotaSpecWithDefaults() *CatalogV1alpha1QuotaSpec {
	this := CatalogV1alpha1QuotaSpec{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CatalogV1alpha1QuotaSpec) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1QuotaSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogV1alpha1QuotaSpec) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CatalogV1alpha1QuotaSpec) SetDescription(v string) {
	o.Description = &v
}

// GetUnit returns the Unit field value
func (o *CatalogV1alpha1QuotaSpec) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1QuotaSpec) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *CatalogV1alpha1QuotaSpec) SetUnit(v string) {
	o.Unit = v
}

// GetPricing returns the Pricing field value
func (o *CatalogV1alpha1QuotaSpec) GetPricing() CatalogV1alpha1QuotaSpecPricing {
	if o == nil {
		var ret CatalogV1alpha1QuotaSpecPricing
		return ret
	}

	return o.Pricing
}

// GetPricingOk returns a tuple with the Pricing field value
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1QuotaSpec) GetPricingOk() (*CatalogV1alpha1QuotaSpecPricing, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pricing, true
}

// SetPricing sets field value
func (o *CatalogV1alpha1QuotaSpec) SetPricing(v CatalogV1alpha1QuotaSpecPricing) {
	o.Pricing = v
}

// GetResources returns the Resources field value
func (o *CatalogV1alpha1QuotaSpec) GetResources() []CatalogV1alpha1QuotaSpecResourcesInner {
	if o == nil {
		var ret []CatalogV1alpha1QuotaSpecResourcesInner
		return ret
	}

	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1QuotaSpec) GetResourcesOk() ([]CatalogV1alpha1QuotaSpecResourcesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resources, true
}

// SetResources sets field value
func (o *CatalogV1alpha1QuotaSpec) SetResources(v []CatalogV1alpha1QuotaSpecResourcesInner) {
	o.Resources = v
}

func (o CatalogV1alpha1QuotaSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1QuotaSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["unit"] = o.Unit
	toSerialize["pricing"] = o.Pricing
	toSerialize["resources"] = o.Resources
	return toSerialize, nil
}

func (o *CatalogV1alpha1QuotaSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"unit",
		"pricing",
		"resources",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogV1alpha1QuotaSpec := _CatalogV1alpha1QuotaSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogV1alpha1QuotaSpec)

	if err != nil {
		return err
	}

	*o = CatalogV1alpha1QuotaSpec(varCatalogV1alpha1QuotaSpec)

	return err
}

type NullableCatalogV1alpha1QuotaSpec struct {
	value *CatalogV1alpha1QuotaSpec
	isSet bool
}

func (v NullableCatalogV1alpha1QuotaSpec) Get() *CatalogV1alpha1QuotaSpec {
	return v.value
}

func (v *NullableCatalogV1alpha1QuotaSpec) Set(val *CatalogV1alpha1QuotaSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1QuotaSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1QuotaSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1QuotaSpec(val *CatalogV1alpha1QuotaSpec) *NullableCatalogV1alpha1QuotaSpec {
	return &NullableCatalogV1alpha1QuotaSpec{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1QuotaSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1QuotaSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


