/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the CatalogV1alpha1AssetRequestDefinitionSpecProvision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1AssetRequestDefinitionSpecProvision{}

// CatalogV1alpha1AssetRequestDefinitionSpecProvision struct for CatalogV1alpha1AssetRequestDefinitionSpecProvision
type CatalogV1alpha1AssetRequestDefinitionSpecProvision struct {
	// JSON Schema draft \\#7 for describing the data to be sent back after access has been provisioned.
	Schema map[string]interface{} `json:"schema,omitempty"`
	Policies *CatalogV1alpha1AssetRequestDefinitionSpecProvisionPolicies `json:"policies,omitempty"`
}

// NewCatalogV1alpha1AssetRequestDefinitionSpecProvision instantiates a new CatalogV1alpha1AssetRequestDefinitionSpecProvision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1AssetRequestDefinitionSpecProvision() *CatalogV1alpha1AssetRequestDefinitionSpecProvision {
	this := CatalogV1alpha1AssetRequestDefinitionSpecProvision{}
	return &this
}

// NewCatalogV1alpha1AssetRequestDefinitionSpecProvisionWithDefaults instantiates a new CatalogV1alpha1AssetRequestDefinitionSpecProvision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1AssetRequestDefinitionSpecProvisionWithDefaults() *CatalogV1alpha1AssetRequestDefinitionSpecProvision {
	this := CatalogV1alpha1AssetRequestDefinitionSpecProvision{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *CatalogV1alpha1AssetRequestDefinitionSpecProvision) GetSchema() map[string]interface{} {
	if o == nil || IsNil(o.Schema) {
		var ret map[string]interface{}
		return ret
	}
	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1AssetRequestDefinitionSpecProvision) GetSchemaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Schema) {
		return map[string]interface{}{}, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *CatalogV1alpha1AssetRequestDefinitionSpecProvision) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given map[string]interface{} and assigns it to the Schema field.
func (o *CatalogV1alpha1AssetRequestDefinitionSpecProvision) SetSchema(v map[string]interface{}) {
	o.Schema = v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *CatalogV1alpha1AssetRequestDefinitionSpecProvision) GetPolicies() CatalogV1alpha1AssetRequestDefinitionSpecProvisionPolicies {
	if o == nil || IsNil(o.Policies) {
		var ret CatalogV1alpha1AssetRequestDefinitionSpecProvisionPolicies
		return ret
	}
	return *o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1AssetRequestDefinitionSpecProvision) GetPoliciesOk() (*CatalogV1alpha1AssetRequestDefinitionSpecProvisionPolicies, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *CatalogV1alpha1AssetRequestDefinitionSpecProvision) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given CatalogV1alpha1AssetRequestDefinitionSpecProvisionPolicies and assigns it to the Policies field.
func (o *CatalogV1alpha1AssetRequestDefinitionSpecProvision) SetPolicies(v CatalogV1alpha1AssetRequestDefinitionSpecProvisionPolicies) {
	o.Policies = &v
}

func (o CatalogV1alpha1AssetRequestDefinitionSpecProvision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1AssetRequestDefinitionSpecProvision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["schema"] = o.Schema
	}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

type NullableCatalogV1alpha1AssetRequestDefinitionSpecProvision struct {
	value *CatalogV1alpha1AssetRequestDefinitionSpecProvision
	isSet bool
}

func (v NullableCatalogV1alpha1AssetRequestDefinitionSpecProvision) Get() *CatalogV1alpha1AssetRequestDefinitionSpecProvision {
	return v.value
}

func (v *NullableCatalogV1alpha1AssetRequestDefinitionSpecProvision) Set(val *CatalogV1alpha1AssetRequestDefinitionSpecProvision) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1AssetRequestDefinitionSpecProvision) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1AssetRequestDefinitionSpecProvision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1AssetRequestDefinitionSpecProvision(val *CatalogV1alpha1AssetRequestDefinitionSpecProvision) *NullableCatalogV1alpha1AssetRequestDefinitionSpecProvision {
	return &NullableCatalogV1alpha1AssetRequestDefinitionSpecProvision{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1AssetRequestDefinitionSpecProvision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1AssetRequestDefinitionSpecProvision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


