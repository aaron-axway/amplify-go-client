/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1APIServiceRevisionSpecDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1APIServiceRevisionSpecDefinition{}

// ManagementV1alpha1APIServiceRevisionSpecDefinition The api specification details.
type ManagementV1alpha1APIServiceRevisionSpecDefinition struct {
	// The type of the api specification.
	Type *string `json:"type,omitempty"`
	// Base64 encoded value of the api specification.
	Value *string `json:"value,omitempty"`
	// content-type of the spec.
	ContentType *string `json:"contentType,omitempty" validate:"regexp=^[-\\\\w.]+\\/[-+\\\\w.]+$"`
	// The version of the api specification. Will be extracted from \"value\" if not assigned.
	Version *string `json:"version,omitempty"`
}

// NewManagementV1alpha1APIServiceRevisionSpecDefinition instantiates a new ManagementV1alpha1APIServiceRevisionSpecDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1APIServiceRevisionSpecDefinition() *ManagementV1alpha1APIServiceRevisionSpecDefinition {
	this := ManagementV1alpha1APIServiceRevisionSpecDefinition{}
	return &this
}

// NewManagementV1alpha1APIServiceRevisionSpecDefinitionWithDefaults instantiates a new ManagementV1alpha1APIServiceRevisionSpecDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1APIServiceRevisionSpecDefinitionWithDefaults() *ManagementV1alpha1APIServiceRevisionSpecDefinition {
	this := ManagementV1alpha1APIServiceRevisionSpecDefinition{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) SetValue(v string) {
	o.Value = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) SetContentType(v string) {
	o.ContentType = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ManagementV1alpha1APIServiceRevisionSpecDefinition) SetVersion(v string) {
	o.Version = &v
}

func (o ManagementV1alpha1APIServiceRevisionSpecDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1APIServiceRevisionSpecDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.ContentType) {
		toSerialize["contentType"] = o.ContentType
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1APIServiceRevisionSpecDefinition struct {
	value *ManagementV1alpha1APIServiceRevisionSpecDefinition
	isSet bool
}

func (v NullableManagementV1alpha1APIServiceRevisionSpecDefinition) Get() *ManagementV1alpha1APIServiceRevisionSpecDefinition {
	return v.value
}

func (v *NullableManagementV1alpha1APIServiceRevisionSpecDefinition) Set(val *ManagementV1alpha1APIServiceRevisionSpecDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1APIServiceRevisionSpecDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1APIServiceRevisionSpecDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1APIServiceRevisionSpecDefinition(val *ManagementV1alpha1APIServiceRevisionSpecDefinition) *NullableManagementV1alpha1APIServiceRevisionSpecDefinition {
	return &NullableManagementV1alpha1APIServiceRevisionSpecDefinition{value: val, isSet: true}
}

func (v NullableManagementV1alpha1APIServiceRevisionSpecDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1APIServiceRevisionSpecDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


