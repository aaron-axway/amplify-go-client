/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ManagementV1alpha1DataplaneSecretStatusError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1DataplaneSecretStatusError{}

// ManagementV1alpha1DataplaneSecretStatusError struct for ManagementV1alpha1DataplaneSecretStatusError
type ManagementV1alpha1DataplaneSecretStatusError struct {
	Type string `json:"type"`
	// Details of the error.
	Detail string `json:"detail"`
	// Time when the update occurred.
	Timestamp time.Time `json:"timestamp"`
	Meta map[string]interface{} `json:"meta,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManagementV1alpha1DataplaneSecretStatusError ManagementV1alpha1DataplaneSecretStatusError

// NewManagementV1alpha1DataplaneSecretStatusError instantiates a new ManagementV1alpha1DataplaneSecretStatusError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1DataplaneSecretStatusError(type_ string, detail string, timestamp time.Time) *ManagementV1alpha1DataplaneSecretStatusError {
	this := ManagementV1alpha1DataplaneSecretStatusError{}
	this.Type = type_
	this.Detail = detail
	this.Timestamp = timestamp
	return &this
}

// NewManagementV1alpha1DataplaneSecretStatusErrorWithDefaults instantiates a new ManagementV1alpha1DataplaneSecretStatusError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1DataplaneSecretStatusErrorWithDefaults() *ManagementV1alpha1DataplaneSecretStatusError {
	this := ManagementV1alpha1DataplaneSecretStatusError{}
	return &this
}

// GetType returns the Type field value
func (o *ManagementV1alpha1DataplaneSecretStatusError) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSecretStatusError) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ManagementV1alpha1DataplaneSecretStatusError) SetType(v string) {
	o.Type = v
}

// GetDetail returns the Detail field value
func (o *ManagementV1alpha1DataplaneSecretStatusError) GetDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSecretStatusError) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *ManagementV1alpha1DataplaneSecretStatusError) SetDetail(v string) {
	o.Detail = v
}

// GetTimestamp returns the Timestamp field value
func (o *ManagementV1alpha1DataplaneSecretStatusError) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSecretStatusError) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ManagementV1alpha1DataplaneSecretStatusError) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ManagementV1alpha1DataplaneSecretStatusError) GetMeta() map[string]interface{} {
	if o == nil || IsNil(o.Meta) {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSecretStatusError) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ManagementV1alpha1DataplaneSecretStatusError) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *ManagementV1alpha1DataplaneSecretStatusError) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

func (o ManagementV1alpha1DataplaneSecretStatusError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1DataplaneSecretStatusError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["detail"] = o.Detail
	toSerialize["timestamp"] = o.Timestamp
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManagementV1alpha1DataplaneSecretStatusError) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"detail",
		"timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagementV1alpha1DataplaneSecretStatusError := _ManagementV1alpha1DataplaneSecretStatusError{}

	err = json.Unmarshal(data, &varManagementV1alpha1DataplaneSecretStatusError)

	if err != nil {
		return err
	}

	*o = ManagementV1alpha1DataplaneSecretStatusError(varManagementV1alpha1DataplaneSecretStatusError)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "detail")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManagementV1alpha1DataplaneSecretStatusError struct {
	value *ManagementV1alpha1DataplaneSecretStatusError
	isSet bool
}

func (v NullableManagementV1alpha1DataplaneSecretStatusError) Get() *ManagementV1alpha1DataplaneSecretStatusError {
	return v.value
}

func (v *NullableManagementV1alpha1DataplaneSecretStatusError) Set(val *ManagementV1alpha1DataplaneSecretStatusError) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1DataplaneSecretStatusError) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1DataplaneSecretStatusError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1DataplaneSecretStatusError(val *ManagementV1alpha1DataplaneSecretStatusError) *NullableManagementV1alpha1DataplaneSecretStatusError {
	return &NullableManagementV1alpha1DataplaneSecretStatusError{value: val, isSet: true}
}

func (v NullableManagementV1alpha1DataplaneSecretStatusError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1DataplaneSecretStatusError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


