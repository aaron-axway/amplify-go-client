/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1ManagedApplicationSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1ManagedApplicationSpec{}

// ManagementV1alpha1ManagedApplicationSpec struct for ManagementV1alpha1ManagedApplicationSpec
type ManagementV1alpha1ManagedApplicationSpec struct {
	Security *ManagementV1alpha1ManagedApplicationSpecSecurity `json:"security,omitempty"`
}

// NewManagementV1alpha1ManagedApplicationSpec instantiates a new ManagementV1alpha1ManagedApplicationSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1ManagedApplicationSpec() *ManagementV1alpha1ManagedApplicationSpec {
	this := ManagementV1alpha1ManagedApplicationSpec{}
	return &this
}

// NewManagementV1alpha1ManagedApplicationSpecWithDefaults instantiates a new ManagementV1alpha1ManagedApplicationSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1ManagedApplicationSpecWithDefaults() *ManagementV1alpha1ManagedApplicationSpec {
	this := ManagementV1alpha1ManagedApplicationSpec{}
	return &this
}

// GetSecurity returns the Security field value if set, zero value otherwise.
func (o *ManagementV1alpha1ManagedApplicationSpec) GetSecurity() ManagementV1alpha1ManagedApplicationSpecSecurity {
	if o == nil || IsNil(o.Security) {
		var ret ManagementV1alpha1ManagedApplicationSpecSecurity
		return ret
	}
	return *o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ManagedApplicationSpec) GetSecurityOk() (*ManagementV1alpha1ManagedApplicationSpecSecurity, bool) {
	if o == nil || IsNil(o.Security) {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *ManagementV1alpha1ManagedApplicationSpec) HasSecurity() bool {
	if o != nil && !IsNil(o.Security) {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given ManagementV1alpha1ManagedApplicationSpecSecurity and assigns it to the Security field.
func (o *ManagementV1alpha1ManagedApplicationSpec) SetSecurity(v ManagementV1alpha1ManagedApplicationSpecSecurity) {
	o.Security = &v
}

func (o ManagementV1alpha1ManagedApplicationSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1ManagedApplicationSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Security) {
		toSerialize["security"] = o.Security
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1ManagedApplicationSpec struct {
	value *ManagementV1alpha1ManagedApplicationSpec
	isSet bool
}

func (v NullableManagementV1alpha1ManagedApplicationSpec) Get() *ManagementV1alpha1ManagedApplicationSpec {
	return v.value
}

func (v *NullableManagementV1alpha1ManagedApplicationSpec) Set(val *ManagementV1alpha1ManagedApplicationSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1ManagedApplicationSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1ManagedApplicationSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1ManagedApplicationSpec(val *ManagementV1alpha1ManagedApplicationSpec) *NullableManagementV1alpha1ManagedApplicationSpec {
	return &NullableManagementV1alpha1ManagedApplicationSpec{value: val, isSet: true}
}

func (v NullableManagementV1alpha1ManagedApplicationSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1ManagedApplicationSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


