/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1APIServiceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1APIServiceDetails{}

// ManagementV1alpha1APIServiceDetails struct for ManagementV1alpha1APIServiceDetails
type ManagementV1alpha1APIServiceDetails struct {
	// Specification type for the API Service.
	SpecType *string `json:"specType,omitempty"`
}

// NewManagementV1alpha1APIServiceDetails instantiates a new ManagementV1alpha1APIServiceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1APIServiceDetails() *ManagementV1alpha1APIServiceDetails {
	this := ManagementV1alpha1APIServiceDetails{}
	return &this
}

// NewManagementV1alpha1APIServiceDetailsWithDefaults instantiates a new ManagementV1alpha1APIServiceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1APIServiceDetailsWithDefaults() *ManagementV1alpha1APIServiceDetails {
	this := ManagementV1alpha1APIServiceDetails{}
	return &this
}

// GetSpecType returns the SpecType field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceDetails) GetSpecType() string {
	if o == nil || IsNil(o.SpecType) {
		var ret string
		return ret
	}
	return *o.SpecType
}

// GetSpecTypeOk returns a tuple with the SpecType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceDetails) GetSpecTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SpecType) {
		return nil, false
	}
	return o.SpecType, true
}

// HasSpecType returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceDetails) HasSpecType() bool {
	if o != nil && !IsNil(o.SpecType) {
		return true
	}

	return false
}

// SetSpecType gets a reference to the given string and assigns it to the SpecType field.
func (o *ManagementV1alpha1APIServiceDetails) SetSpecType(v string) {
	o.SpecType = &v
}

func (o ManagementV1alpha1APIServiceDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1APIServiceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpecType) {
		toSerialize["specType"] = o.SpecType
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1APIServiceDetails struct {
	value *ManagementV1alpha1APIServiceDetails
	isSet bool
}

func (v NullableManagementV1alpha1APIServiceDetails) Get() *ManagementV1alpha1APIServiceDetails {
	return v.value
}

func (v *NullableManagementV1alpha1APIServiceDetails) Set(val *ManagementV1alpha1APIServiceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1APIServiceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1APIServiceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1APIServiceDetails(val *ManagementV1alpha1APIServiceDetails) *NullableManagementV1alpha1APIServiceDetails {
	return &NullableManagementV1alpha1APIServiceDetails{value: val, isSet: true}
}

func (v NullableManagementV1alpha1APIServiceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1APIServiceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


