/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogV1DocumentSpecSectionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1DocumentSpecSectionsInner{}

// CatalogV1DocumentSpecSectionsInner struct for CatalogV1DocumentSpecSectionsInner
type CatalogV1DocumentSpecSectionsInner struct {
	// Title for the section.
	Title string `json:"title"`
	// Description for the section.
	Description *string `json:"description,omitempty"`
	// Section articles.
	Articles []CatalogV1DocumentSpecSectionsInnerArticlesInner `json:"articles,omitempty"`
}

type _CatalogV1DocumentSpecSectionsInner CatalogV1DocumentSpecSectionsInner

// NewCatalogV1DocumentSpecSectionsInner instantiates a new CatalogV1DocumentSpecSectionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1DocumentSpecSectionsInner(title string) *CatalogV1DocumentSpecSectionsInner {
	this := CatalogV1DocumentSpecSectionsInner{}
	this.Title = title
	return &this
}

// NewCatalogV1DocumentSpecSectionsInnerWithDefaults instantiates a new CatalogV1DocumentSpecSectionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1DocumentSpecSectionsInnerWithDefaults() *CatalogV1DocumentSpecSectionsInner {
	this := CatalogV1DocumentSpecSectionsInner{}
	return &this
}

// GetTitle returns the Title field value
func (o *CatalogV1DocumentSpecSectionsInner) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CatalogV1DocumentSpecSectionsInner) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CatalogV1DocumentSpecSectionsInner) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CatalogV1DocumentSpecSectionsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1DocumentSpecSectionsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogV1DocumentSpecSectionsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CatalogV1DocumentSpecSectionsInner) SetDescription(v string) {
	o.Description = &v
}

// GetArticles returns the Articles field value if set, zero value otherwise.
func (o *CatalogV1DocumentSpecSectionsInner) GetArticles() []CatalogV1DocumentSpecSectionsInnerArticlesInner {
	if o == nil || IsNil(o.Articles) {
		var ret []CatalogV1DocumentSpecSectionsInnerArticlesInner
		return ret
	}
	return o.Articles
}

// GetArticlesOk returns a tuple with the Articles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1DocumentSpecSectionsInner) GetArticlesOk() ([]CatalogV1DocumentSpecSectionsInnerArticlesInner, bool) {
	if o == nil || IsNil(o.Articles) {
		return nil, false
	}
	return o.Articles, true
}

// HasArticles returns a boolean if a field has been set.
func (o *CatalogV1DocumentSpecSectionsInner) HasArticles() bool {
	if o != nil && !IsNil(o.Articles) {
		return true
	}

	return false
}

// SetArticles gets a reference to the given []CatalogV1DocumentSpecSectionsInnerArticlesInner and assigns it to the Articles field.
func (o *CatalogV1DocumentSpecSectionsInner) SetArticles(v []CatalogV1DocumentSpecSectionsInnerArticlesInner) {
	o.Articles = v
}

func (o CatalogV1DocumentSpecSectionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1DocumentSpecSectionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Articles) {
		toSerialize["articles"] = o.Articles
	}
	return toSerialize, nil
}

func (o *CatalogV1DocumentSpecSectionsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogV1DocumentSpecSectionsInner := _CatalogV1DocumentSpecSectionsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogV1DocumentSpecSectionsInner)

	if err != nil {
		return err
	}

	*o = CatalogV1DocumentSpecSectionsInner(varCatalogV1DocumentSpecSectionsInner)

	return err
}

type NullableCatalogV1DocumentSpecSectionsInner struct {
	value *CatalogV1DocumentSpecSectionsInner
	isSet bool
}

func (v NullableCatalogV1DocumentSpecSectionsInner) Get() *CatalogV1DocumentSpecSectionsInner {
	return v.value
}

func (v *NullableCatalogV1DocumentSpecSectionsInner) Set(val *CatalogV1DocumentSpecSectionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1DocumentSpecSectionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1DocumentSpecSectionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1DocumentSpecSectionsInner(val *CatalogV1DocumentSpecSectionsInner) *NullableCatalogV1DocumentSpecSectionsInner {
	return &NullableCatalogV1DocumentSpecSectionsInner{value: val, isSet: true}
}

func (v NullableCatalogV1DocumentSpecSectionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1DocumentSpecSectionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


