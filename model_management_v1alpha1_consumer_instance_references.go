/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1ConsumerInstanceReferences type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1ConsumerInstanceReferences{}

// ManagementV1alpha1ConsumerInstanceReferences struct for ManagementV1alpha1ConsumerInstanceReferences
type ManagementV1alpha1ConsumerInstanceReferences struct {
	// Reference to Amplify Central APIService
	ApiService *string `json:"apiService,omitempty"`
	// Reference to Amplify Central APIServiceRevision
	ApiServiceRevision *string `json:"apiServiceRevision,omitempty"`
}

// NewManagementV1alpha1ConsumerInstanceReferences instantiates a new ManagementV1alpha1ConsumerInstanceReferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1ConsumerInstanceReferences() *ManagementV1alpha1ConsumerInstanceReferences {
	this := ManagementV1alpha1ConsumerInstanceReferences{}
	return &this
}

// NewManagementV1alpha1ConsumerInstanceReferencesWithDefaults instantiates a new ManagementV1alpha1ConsumerInstanceReferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1ConsumerInstanceReferencesWithDefaults() *ManagementV1alpha1ConsumerInstanceReferences {
	this := ManagementV1alpha1ConsumerInstanceReferences{}
	return &this
}

// GetApiService returns the ApiService field value if set, zero value otherwise.
func (o *ManagementV1alpha1ConsumerInstanceReferences) GetApiService() string {
	if o == nil || IsNil(o.ApiService) {
		var ret string
		return ret
	}
	return *o.ApiService
}

// GetApiServiceOk returns a tuple with the ApiService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ConsumerInstanceReferences) GetApiServiceOk() (*string, bool) {
	if o == nil || IsNil(o.ApiService) {
		return nil, false
	}
	return o.ApiService, true
}

// HasApiService returns a boolean if a field has been set.
func (o *ManagementV1alpha1ConsumerInstanceReferences) HasApiService() bool {
	if o != nil && !IsNil(o.ApiService) {
		return true
	}

	return false
}

// SetApiService gets a reference to the given string and assigns it to the ApiService field.
func (o *ManagementV1alpha1ConsumerInstanceReferences) SetApiService(v string) {
	o.ApiService = &v
}

// GetApiServiceRevision returns the ApiServiceRevision field value if set, zero value otherwise.
func (o *ManagementV1alpha1ConsumerInstanceReferences) GetApiServiceRevision() string {
	if o == nil || IsNil(o.ApiServiceRevision) {
		var ret string
		return ret
	}
	return *o.ApiServiceRevision
}

// GetApiServiceRevisionOk returns a tuple with the ApiServiceRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ConsumerInstanceReferences) GetApiServiceRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiServiceRevision) {
		return nil, false
	}
	return o.ApiServiceRevision, true
}

// HasApiServiceRevision returns a boolean if a field has been set.
func (o *ManagementV1alpha1ConsumerInstanceReferences) HasApiServiceRevision() bool {
	if o != nil && !IsNil(o.ApiServiceRevision) {
		return true
	}

	return false
}

// SetApiServiceRevision gets a reference to the given string and assigns it to the ApiServiceRevision field.
func (o *ManagementV1alpha1ConsumerInstanceReferences) SetApiServiceRevision(v string) {
	o.ApiServiceRevision = &v
}

func (o ManagementV1alpha1ConsumerInstanceReferences) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1ConsumerInstanceReferences) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiService) {
		toSerialize["apiService"] = o.ApiService
	}
	if !IsNil(o.ApiServiceRevision) {
		toSerialize["apiServiceRevision"] = o.ApiServiceRevision
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1ConsumerInstanceReferences struct {
	value *ManagementV1alpha1ConsumerInstanceReferences
	isSet bool
}

func (v NullableManagementV1alpha1ConsumerInstanceReferences) Get() *ManagementV1alpha1ConsumerInstanceReferences {
	return v.value
}

func (v *NullableManagementV1alpha1ConsumerInstanceReferences) Set(val *ManagementV1alpha1ConsumerInstanceReferences) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1ConsumerInstanceReferences) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1ConsumerInstanceReferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1ConsumerInstanceReferences(val *ManagementV1alpha1ConsumerInstanceReferences) *NullableManagementV1alpha1ConsumerInstanceReferences {
	return &NullableManagementV1alpha1ConsumerInstanceReferences{value: val, isSet: true}
}

func (v NullableManagementV1alpha1ConsumerInstanceReferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1ConsumerInstanceReferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


