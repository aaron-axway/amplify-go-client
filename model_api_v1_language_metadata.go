/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the ApiV1LanguageMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV1LanguageMetadata{}

// ApiV1LanguageMetadata Information about resource languages
type ApiV1LanguageMetadata struct {
	// Language code.
	Code *string `json:"code,omitempty"`
	// Status of the language. * \"complete\" language available for the resource with no missing properties or properties that need to be reviewed. * \"toReview\" language has properties that are missing or need to be reviewed. * \"undefined\" language is not defined on the resource. 
	Status *string `json:"status,omitempty"`
	Audit *ApiV1AuditMetadata `json:"audit,omitempty"`
}

// NewApiV1LanguageMetadata instantiates a new ApiV1LanguageMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV1LanguageMetadata() *ApiV1LanguageMetadata {
	this := ApiV1LanguageMetadata{}
	return &this
}

// NewApiV1LanguageMetadataWithDefaults instantiates a new ApiV1LanguageMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV1LanguageMetadataWithDefaults() *ApiV1LanguageMetadata {
	this := ApiV1LanguageMetadata{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ApiV1LanguageMetadata) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1LanguageMetadata) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ApiV1LanguageMetadata) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ApiV1LanguageMetadata) SetCode(v string) {
	o.Code = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiV1LanguageMetadata) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1LanguageMetadata) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV1LanguageMetadata) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiV1LanguageMetadata) SetStatus(v string) {
	o.Status = &v
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *ApiV1LanguageMetadata) GetAudit() ApiV1AuditMetadata {
	if o == nil || IsNil(o.Audit) {
		var ret ApiV1AuditMetadata
		return ret
	}
	return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1LanguageMetadata) GetAuditOk() (*ApiV1AuditMetadata, bool) {
	if o == nil || IsNil(o.Audit) {
		return nil, false
	}
	return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *ApiV1LanguageMetadata) HasAudit() bool {
	if o != nil && !IsNil(o.Audit) {
		return true
	}

	return false
}

// SetAudit gets a reference to the given ApiV1AuditMetadata and assigns it to the Audit field.
func (o *ApiV1LanguageMetadata) SetAudit(v ApiV1AuditMetadata) {
	o.Audit = &v
}

func (o ApiV1LanguageMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV1LanguageMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Audit) {
		toSerialize["audit"] = o.Audit
	}
	return toSerialize, nil
}

type NullableApiV1LanguageMetadata struct {
	value *ApiV1LanguageMetadata
	isSet bool
}

func (v NullableApiV1LanguageMetadata) Get() *ApiV1LanguageMetadata {
	return v.value
}

func (v *NullableApiV1LanguageMetadata) Set(val *ApiV1LanguageMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV1LanguageMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV1LanguageMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV1LanguageMetadata(val *ApiV1LanguageMetadata) *NullableApiV1LanguageMetadata {
	return &NullableApiV1LanguageMetadata{value: val, isSet: true}
}

func (v NullableApiV1LanguageMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV1LanguageMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


