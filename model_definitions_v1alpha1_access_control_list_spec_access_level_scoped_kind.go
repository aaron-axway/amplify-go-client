/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind{}

// DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind struct for DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind
type DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind struct {
	// Resource level at which access is being granted.
	Level *string `json:"level,omitempty"`
	// The kind of scoped resources to provide access to or \"*\" for all kinds.
	Kind string `json:"kind"`
	// Set true to allow users to create scoped resources of the specified kind.
	AllowCreate *bool `json:"allowCreate,omitempty"`
	// Set true to allow users to delete scoped resources of the specified kind.
	AllowDelete *bool `json:"allowDelete,omitempty"`
	// Set true to allow users to update scoped resources of the specified kind.
	AllowWrite *bool `json:"allowWrite,omitempty"`
}

type _DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind

// NewDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind instantiates a new DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind(kind string) *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind {
	this := DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind{}
	this.Kind = kind
	return &this
}

// NewDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKindWithDefaults instantiates a new DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKindWithDefaults() *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind {
	this := DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind{}
	return &this
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) SetLevel(v string) {
	o.Level = &v
}

// GetKind returns the Kind field value
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) SetKind(v string) {
	o.Kind = v
}

// GetAllowCreate returns the AllowCreate field value if set, zero value otherwise.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetAllowCreate() bool {
	if o == nil || IsNil(o.AllowCreate) {
		var ret bool
		return ret
	}
	return *o.AllowCreate
}

// GetAllowCreateOk returns a tuple with the AllowCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetAllowCreateOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCreate) {
		return nil, false
	}
	return o.AllowCreate, true
}

// HasAllowCreate returns a boolean if a field has been set.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) HasAllowCreate() bool {
	if o != nil && !IsNil(o.AllowCreate) {
		return true
	}

	return false
}

// SetAllowCreate gets a reference to the given bool and assigns it to the AllowCreate field.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) SetAllowCreate(v bool) {
	o.AllowCreate = &v
}

// GetAllowDelete returns the AllowDelete field value if set, zero value otherwise.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetAllowDelete() bool {
	if o == nil || IsNil(o.AllowDelete) {
		var ret bool
		return ret
	}
	return *o.AllowDelete
}

// GetAllowDeleteOk returns a tuple with the AllowDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetAllowDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowDelete) {
		return nil, false
	}
	return o.AllowDelete, true
}

// HasAllowDelete returns a boolean if a field has been set.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) HasAllowDelete() bool {
	if o != nil && !IsNil(o.AllowDelete) {
		return true
	}

	return false
}

// SetAllowDelete gets a reference to the given bool and assigns it to the AllowDelete field.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) SetAllowDelete(v bool) {
	o.AllowDelete = &v
}

// GetAllowWrite returns the AllowWrite field value if set, zero value otherwise.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetAllowWrite() bool {
	if o == nil || IsNil(o.AllowWrite) {
		var ret bool
		return ret
	}
	return *o.AllowWrite
}

// GetAllowWriteOk returns a tuple with the AllowWrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) GetAllowWriteOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowWrite) {
		return nil, false
	}
	return o.AllowWrite, true
}

// HasAllowWrite returns a boolean if a field has been set.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) HasAllowWrite() bool {
	if o != nil && !IsNil(o.AllowWrite) {
		return true
	}

	return false
}

// SetAllowWrite gets a reference to the given bool and assigns it to the AllowWrite field.
func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) SetAllowWrite(v bool) {
	o.AllowWrite = &v
}

func (o DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	toSerialize["kind"] = o.Kind
	if !IsNil(o.AllowCreate) {
		toSerialize["allowCreate"] = o.AllowCreate
	}
	if !IsNil(o.AllowDelete) {
		toSerialize["allowDelete"] = o.AllowDelete
	}
	if !IsNil(o.AllowWrite) {
		toSerialize["allowWrite"] = o.AllowWrite
	}
	return toSerialize, nil
}

func (o *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kind",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind := _DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind)

	if err != nil {
		return err
	}

	*o = DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind(varDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind)

	return err
}

type NullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind struct {
	value *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind
	isSet bool
}

func (v NullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) Get() *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind {
	return v.value
}

func (v *NullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) Set(val *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) {
	v.value = val
	v.isSet = true
}

func (v NullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) IsSet() bool {
	return v.isSet
}

func (v *NullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind(val *DefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) *NullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind {
	return &NullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind{value: val, isSet: true}
}

func (v NullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefinitionsV1alpha1AccessControlListSpecAccessLevelScopedKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


