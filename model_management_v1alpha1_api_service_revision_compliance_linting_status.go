/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1APIServiceRevisionComplianceLintingStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1APIServiceRevisionComplianceLintingStatus{}

// ManagementV1alpha1APIServiceRevisionComplianceLintingStatus Provides the current linting job state and the final result.
type ManagementV1alpha1APIServiceRevisionComplianceLintingStatus struct {
	// The state of the compliance job.
	State *string `json:"state,omitempty"`
	ApiSpecLintingJob *string `json:"apiSpecLintingJob,omitempty"`
	// Ruleset logical name.
	Ruleset *string `json:"ruleset,omitempty"`
	// File name of the APISpecLintingRuleset.
	RulesetFileName *string `json:"rulesetFileName,omitempty"`
	Result *ManagementV1alpha1APIServiceRevisionComplianceLintingStatusResult `json:"result,omitempty"`
}

// NewManagementV1alpha1APIServiceRevisionComplianceLintingStatus instantiates a new ManagementV1alpha1APIServiceRevisionComplianceLintingStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1APIServiceRevisionComplianceLintingStatus() *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus {
	this := ManagementV1alpha1APIServiceRevisionComplianceLintingStatus{}
	return &this
}

// NewManagementV1alpha1APIServiceRevisionComplianceLintingStatusWithDefaults instantiates a new ManagementV1alpha1APIServiceRevisionComplianceLintingStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1APIServiceRevisionComplianceLintingStatusWithDefaults() *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus {
	this := ManagementV1alpha1APIServiceRevisionComplianceLintingStatus{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) SetState(v string) {
	o.State = &v
}

// GetApiSpecLintingJob returns the ApiSpecLintingJob field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetApiSpecLintingJob() string {
	if o == nil || IsNil(o.ApiSpecLintingJob) {
		var ret string
		return ret
	}
	return *o.ApiSpecLintingJob
}

// GetApiSpecLintingJobOk returns a tuple with the ApiSpecLintingJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetApiSpecLintingJobOk() (*string, bool) {
	if o == nil || IsNil(o.ApiSpecLintingJob) {
		return nil, false
	}
	return o.ApiSpecLintingJob, true
}

// HasApiSpecLintingJob returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) HasApiSpecLintingJob() bool {
	if o != nil && !IsNil(o.ApiSpecLintingJob) {
		return true
	}

	return false
}

// SetApiSpecLintingJob gets a reference to the given string and assigns it to the ApiSpecLintingJob field.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) SetApiSpecLintingJob(v string) {
	o.ApiSpecLintingJob = &v
}

// GetRuleset returns the Ruleset field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetRuleset() string {
	if o == nil || IsNil(o.Ruleset) {
		var ret string
		return ret
	}
	return *o.Ruleset
}

// GetRulesetOk returns a tuple with the Ruleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetRulesetOk() (*string, bool) {
	if o == nil || IsNil(o.Ruleset) {
		return nil, false
	}
	return o.Ruleset, true
}

// HasRuleset returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) HasRuleset() bool {
	if o != nil && !IsNil(o.Ruleset) {
		return true
	}

	return false
}

// SetRuleset gets a reference to the given string and assigns it to the Ruleset field.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) SetRuleset(v string) {
	o.Ruleset = &v
}

// GetRulesetFileName returns the RulesetFileName field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetRulesetFileName() string {
	if o == nil || IsNil(o.RulesetFileName) {
		var ret string
		return ret
	}
	return *o.RulesetFileName
}

// GetRulesetFileNameOk returns a tuple with the RulesetFileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetRulesetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.RulesetFileName) {
		return nil, false
	}
	return o.RulesetFileName, true
}

// HasRulesetFileName returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) HasRulesetFileName() bool {
	if o != nil && !IsNil(o.RulesetFileName) {
		return true
	}

	return false
}

// SetRulesetFileName gets a reference to the given string and assigns it to the RulesetFileName field.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) SetRulesetFileName(v string) {
	o.RulesetFileName = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetResult() ManagementV1alpha1APIServiceRevisionComplianceLintingStatusResult {
	if o == nil || IsNil(o.Result) {
		var ret ManagementV1alpha1APIServiceRevisionComplianceLintingStatusResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) GetResultOk() (*ManagementV1alpha1APIServiceRevisionComplianceLintingStatusResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given ManagementV1alpha1APIServiceRevisionComplianceLintingStatusResult and assigns it to the Result field.
func (o *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) SetResult(v ManagementV1alpha1APIServiceRevisionComplianceLintingStatusResult) {
	o.Result = &v
}

func (o ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.ApiSpecLintingJob) {
		toSerialize["apiSpecLintingJob"] = o.ApiSpecLintingJob
	}
	if !IsNil(o.Ruleset) {
		toSerialize["ruleset"] = o.Ruleset
	}
	if !IsNil(o.RulesetFileName) {
		toSerialize["rulesetFileName"] = o.RulesetFileName
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus struct {
	value *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus
	isSet bool
}

func (v NullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus) Get() *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus {
	return v.value
}

func (v *NullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus) Set(val *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus(val *ManagementV1alpha1APIServiceRevisionComplianceLintingStatus) *NullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus {
	return &NullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus{value: val, isSet: true}
}

func (v NullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1APIServiceRevisionComplianceLintingStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


