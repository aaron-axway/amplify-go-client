/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiV1LanguageValuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV1LanguageValuesInner{}

// ApiV1LanguageValuesInner struct for ApiV1LanguageValuesInner
type ApiV1LanguageValuesInner struct {
	// The json path for where the value is defined
	Path *string `json:"path,omitempty"`
	// The value
	Value map[string]interface{} `json:"value,omitempty"`
	// Status of the value for the path. * \"complete\" value provided and does not need to be reviewed. * \"toReview\" value provided, but it needs to be reviewed. * \"undefined\" value not provided. 
	Status *string `json:"status,omitempty"`
}

// NewApiV1LanguageValuesInner instantiates a new ApiV1LanguageValuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV1LanguageValuesInner() *ApiV1LanguageValuesInner {
	this := ApiV1LanguageValuesInner{}
	return &this
}

// NewApiV1LanguageValuesInnerWithDefaults instantiates a new ApiV1LanguageValuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV1LanguageValuesInnerWithDefaults() *ApiV1LanguageValuesInner {
	this := ApiV1LanguageValuesInner{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ApiV1LanguageValuesInner) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1LanguageValuesInner) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ApiV1LanguageValuesInner) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ApiV1LanguageValuesInner) SetPath(v string) {
	o.Path = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ApiV1LanguageValuesInner) GetValue() map[string]interface{} {
	if o == nil || IsNil(o.Value) {
		var ret map[string]interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1LanguageValuesInner) GetValueOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Value) {
		return map[string]interface{}{}, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ApiV1LanguageValuesInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given map[string]interface{} and assigns it to the Value field.
func (o *ApiV1LanguageValuesInner) SetValue(v map[string]interface{}) {
	o.Value = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiV1LanguageValuesInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1LanguageValuesInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV1LanguageValuesInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiV1LanguageValuesInner) SetStatus(v string) {
	o.Status = &v
}

func (o ApiV1LanguageValuesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV1LanguageValuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableApiV1LanguageValuesInner struct {
	value *ApiV1LanguageValuesInner
	isSet bool
}

func (v NullableApiV1LanguageValuesInner) Get() *ApiV1LanguageValuesInner {
	return v.value
}

func (v *NullableApiV1LanguageValuesInner) Set(val *ApiV1LanguageValuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV1LanguageValuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV1LanguageValuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV1LanguageValuesInner(val *ApiV1LanguageValuesInner) *NullableApiV1LanguageValuesInner {
	return &NullableApiV1LanguageValuesInner{value: val, isSet: true}
}

func (v NullableApiV1LanguageValuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV1LanguageValuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


