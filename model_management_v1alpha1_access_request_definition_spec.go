/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManagementV1alpha1AccessRequestDefinitionSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1AccessRequestDefinitionSpec{}

// ManagementV1alpha1AccessRequestDefinitionSpec struct for ManagementV1alpha1AccessRequestDefinitionSpec
type ManagementV1alpha1AccessRequestDefinitionSpec struct {
	// JSON Schema draft \\#7 for defining the AccessRequest properties needed to get access to an APIServiceInstance.
	Schema map[string]interface{} `json:"schema"`
	Provision *ManagementV1alpha1AccessRequestDefinitionSpecProvision `json:"provision,omitempty"`
}

type _ManagementV1alpha1AccessRequestDefinitionSpec ManagementV1alpha1AccessRequestDefinitionSpec

// NewManagementV1alpha1AccessRequestDefinitionSpec instantiates a new ManagementV1alpha1AccessRequestDefinitionSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1AccessRequestDefinitionSpec(schema map[string]interface{}) *ManagementV1alpha1AccessRequestDefinitionSpec {
	this := ManagementV1alpha1AccessRequestDefinitionSpec{}
	this.Schema = schema
	return &this
}

// NewManagementV1alpha1AccessRequestDefinitionSpecWithDefaults instantiates a new ManagementV1alpha1AccessRequestDefinitionSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1AccessRequestDefinitionSpecWithDefaults() *ManagementV1alpha1AccessRequestDefinitionSpec {
	this := ManagementV1alpha1AccessRequestDefinitionSpec{}
	return &this
}

// GetSchema returns the Schema field value
func (o *ManagementV1alpha1AccessRequestDefinitionSpec) GetSchema() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1AccessRequestDefinitionSpec) GetSchemaOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Schema, true
}

// SetSchema sets field value
func (o *ManagementV1alpha1AccessRequestDefinitionSpec) SetSchema(v map[string]interface{}) {
	o.Schema = v
}

// GetProvision returns the Provision field value if set, zero value otherwise.
func (o *ManagementV1alpha1AccessRequestDefinitionSpec) GetProvision() ManagementV1alpha1AccessRequestDefinitionSpecProvision {
	if o == nil || IsNil(o.Provision) {
		var ret ManagementV1alpha1AccessRequestDefinitionSpecProvision
		return ret
	}
	return *o.Provision
}

// GetProvisionOk returns a tuple with the Provision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1AccessRequestDefinitionSpec) GetProvisionOk() (*ManagementV1alpha1AccessRequestDefinitionSpecProvision, bool) {
	if o == nil || IsNil(o.Provision) {
		return nil, false
	}
	return o.Provision, true
}

// HasProvision returns a boolean if a field has been set.
func (o *ManagementV1alpha1AccessRequestDefinitionSpec) HasProvision() bool {
	if o != nil && !IsNil(o.Provision) {
		return true
	}

	return false
}

// SetProvision gets a reference to the given ManagementV1alpha1AccessRequestDefinitionSpecProvision and assigns it to the Provision field.
func (o *ManagementV1alpha1AccessRequestDefinitionSpec) SetProvision(v ManagementV1alpha1AccessRequestDefinitionSpecProvision) {
	o.Provision = &v
}

func (o ManagementV1alpha1AccessRequestDefinitionSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1AccessRequestDefinitionSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schema"] = o.Schema
	if !IsNil(o.Provision) {
		toSerialize["provision"] = o.Provision
	}
	return toSerialize, nil
}

func (o *ManagementV1alpha1AccessRequestDefinitionSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"schema",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagementV1alpha1AccessRequestDefinitionSpec := _ManagementV1alpha1AccessRequestDefinitionSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManagementV1alpha1AccessRequestDefinitionSpec)

	if err != nil {
		return err
	}

	*o = ManagementV1alpha1AccessRequestDefinitionSpec(varManagementV1alpha1AccessRequestDefinitionSpec)

	return err
}

type NullableManagementV1alpha1AccessRequestDefinitionSpec struct {
	value *ManagementV1alpha1AccessRequestDefinitionSpec
	isSet bool
}

func (v NullableManagementV1alpha1AccessRequestDefinitionSpec) Get() *ManagementV1alpha1AccessRequestDefinitionSpec {
	return v.value
}

func (v *NullableManagementV1alpha1AccessRequestDefinitionSpec) Set(val *ManagementV1alpha1AccessRequestDefinitionSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1AccessRequestDefinitionSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1AccessRequestDefinitionSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1AccessRequestDefinitionSpec(val *ManagementV1alpha1AccessRequestDefinitionSpec) *NullableManagementV1alpha1AccessRequestDefinitionSpec {
	return &NullableManagementV1alpha1AccessRequestDefinitionSpec{value: val, isSet: true}
}

func (v NullableManagementV1alpha1AccessRequestDefinitionSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1AccessRequestDefinitionSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


