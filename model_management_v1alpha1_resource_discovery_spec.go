/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1ResourceDiscoverySpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1ResourceDiscoverySpec{}

// ManagementV1alpha1ResourceDiscoverySpec struct for ManagementV1alpha1ResourceDiscoverySpec
type ManagementV1alpha1ResourceDiscoverySpec struct {
	Version *string `json:"version,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Group *string `json:"group,omitempty"`
	NamespaceFilter *ManagementV1alpha1ResourceDiscoverySpecNamespaceFilter `json:"namespaceFilter,omitempty"`
	ResourceFilter *ManagementV1alpha1ResourceDiscoverySpecResourceFilter `json:"resourceFilter,omitempty"`
	KeepSpecFields []string `json:"keepSpecFields,omitempty"`
	KeepStatusFields []string `json:"keepStatusFields,omitempty"`
	IgnoreLabels []string `json:"ignoreLabels,omitempty"`
	Tags []string `json:"tags,omitempty"`
	ExtraAttributes *map[string]string `json:"extraAttributes,omitempty"`
}

// NewManagementV1alpha1ResourceDiscoverySpec instantiates a new ManagementV1alpha1ResourceDiscoverySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1ResourceDiscoverySpec() *ManagementV1alpha1ResourceDiscoverySpec {
	this := ManagementV1alpha1ResourceDiscoverySpec{}
	return &this
}

// NewManagementV1alpha1ResourceDiscoverySpecWithDefaults instantiates a new ManagementV1alpha1ResourceDiscoverySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1ResourceDiscoverySpecWithDefaults() *ManagementV1alpha1ResourceDiscoverySpec {
	this := ManagementV1alpha1ResourceDiscoverySpec{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetVersion(v string) {
	o.Version = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetKind(v string) {
	o.Kind = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetGroup(v string) {
	o.Group = &v
}

// GetNamespaceFilter returns the NamespaceFilter field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetNamespaceFilter() ManagementV1alpha1ResourceDiscoverySpecNamespaceFilter {
	if o == nil || IsNil(o.NamespaceFilter) {
		var ret ManagementV1alpha1ResourceDiscoverySpecNamespaceFilter
		return ret
	}
	return *o.NamespaceFilter
}

// GetNamespaceFilterOk returns a tuple with the NamespaceFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetNamespaceFilterOk() (*ManagementV1alpha1ResourceDiscoverySpecNamespaceFilter, bool) {
	if o == nil || IsNil(o.NamespaceFilter) {
		return nil, false
	}
	return o.NamespaceFilter, true
}

// HasNamespaceFilter returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasNamespaceFilter() bool {
	if o != nil && !IsNil(o.NamespaceFilter) {
		return true
	}

	return false
}

// SetNamespaceFilter gets a reference to the given ManagementV1alpha1ResourceDiscoverySpecNamespaceFilter and assigns it to the NamespaceFilter field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetNamespaceFilter(v ManagementV1alpha1ResourceDiscoverySpecNamespaceFilter) {
	o.NamespaceFilter = &v
}

// GetResourceFilter returns the ResourceFilter field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetResourceFilter() ManagementV1alpha1ResourceDiscoverySpecResourceFilter {
	if o == nil || IsNil(o.ResourceFilter) {
		var ret ManagementV1alpha1ResourceDiscoverySpecResourceFilter
		return ret
	}
	return *o.ResourceFilter
}

// GetResourceFilterOk returns a tuple with the ResourceFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetResourceFilterOk() (*ManagementV1alpha1ResourceDiscoverySpecResourceFilter, bool) {
	if o == nil || IsNil(o.ResourceFilter) {
		return nil, false
	}
	return o.ResourceFilter, true
}

// HasResourceFilter returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasResourceFilter() bool {
	if o != nil && !IsNil(o.ResourceFilter) {
		return true
	}

	return false
}

// SetResourceFilter gets a reference to the given ManagementV1alpha1ResourceDiscoverySpecResourceFilter and assigns it to the ResourceFilter field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetResourceFilter(v ManagementV1alpha1ResourceDiscoverySpecResourceFilter) {
	o.ResourceFilter = &v
}

// GetKeepSpecFields returns the KeepSpecFields field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetKeepSpecFields() []string {
	if o == nil || IsNil(o.KeepSpecFields) {
		var ret []string
		return ret
	}
	return o.KeepSpecFields
}

// GetKeepSpecFieldsOk returns a tuple with the KeepSpecFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetKeepSpecFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.KeepSpecFields) {
		return nil, false
	}
	return o.KeepSpecFields, true
}

// HasKeepSpecFields returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasKeepSpecFields() bool {
	if o != nil && !IsNil(o.KeepSpecFields) {
		return true
	}

	return false
}

// SetKeepSpecFields gets a reference to the given []string and assigns it to the KeepSpecFields field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetKeepSpecFields(v []string) {
	o.KeepSpecFields = v
}

// GetKeepStatusFields returns the KeepStatusFields field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetKeepStatusFields() []string {
	if o == nil || IsNil(o.KeepStatusFields) {
		var ret []string
		return ret
	}
	return o.KeepStatusFields
}

// GetKeepStatusFieldsOk returns a tuple with the KeepStatusFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetKeepStatusFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.KeepStatusFields) {
		return nil, false
	}
	return o.KeepStatusFields, true
}

// HasKeepStatusFields returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasKeepStatusFields() bool {
	if o != nil && !IsNil(o.KeepStatusFields) {
		return true
	}

	return false
}

// SetKeepStatusFields gets a reference to the given []string and assigns it to the KeepStatusFields field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetKeepStatusFields(v []string) {
	o.KeepStatusFields = v
}

// GetIgnoreLabels returns the IgnoreLabels field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetIgnoreLabels() []string {
	if o == nil || IsNil(o.IgnoreLabels) {
		var ret []string
		return ret
	}
	return o.IgnoreLabels
}

// GetIgnoreLabelsOk returns a tuple with the IgnoreLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetIgnoreLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.IgnoreLabels) {
		return nil, false
	}
	return o.IgnoreLabels, true
}

// HasIgnoreLabels returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasIgnoreLabels() bool {
	if o != nil && !IsNil(o.IgnoreLabels) {
		return true
	}

	return false
}

// SetIgnoreLabels gets a reference to the given []string and assigns it to the IgnoreLabels field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetIgnoreLabels(v []string) {
	o.IgnoreLabels = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetTags(v []string) {
	o.Tags = v
}

// GetExtraAttributes returns the ExtraAttributes field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetExtraAttributes() map[string]string {
	if o == nil || IsNil(o.ExtraAttributes) {
		var ret map[string]string
		return ret
	}
	return *o.ExtraAttributes
}

// GetExtraAttributesOk returns a tuple with the ExtraAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) GetExtraAttributesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtraAttributes) {
		return nil, false
	}
	return o.ExtraAttributes, true
}

// HasExtraAttributes returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpec) HasExtraAttributes() bool {
	if o != nil && !IsNil(o.ExtraAttributes) {
		return true
	}

	return false
}

// SetExtraAttributes gets a reference to the given map[string]string and assigns it to the ExtraAttributes field.
func (o *ManagementV1alpha1ResourceDiscoverySpec) SetExtraAttributes(v map[string]string) {
	o.ExtraAttributes = &v
}

func (o ManagementV1alpha1ResourceDiscoverySpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1ResourceDiscoverySpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.NamespaceFilter) {
		toSerialize["namespaceFilter"] = o.NamespaceFilter
	}
	if !IsNil(o.ResourceFilter) {
		toSerialize["resourceFilter"] = o.ResourceFilter
	}
	if !IsNil(o.KeepSpecFields) {
		toSerialize["keepSpecFields"] = o.KeepSpecFields
	}
	if !IsNil(o.KeepStatusFields) {
		toSerialize["keepStatusFields"] = o.KeepStatusFields
	}
	if !IsNil(o.IgnoreLabels) {
		toSerialize["ignoreLabels"] = o.IgnoreLabels
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.ExtraAttributes) {
		toSerialize["extraAttributes"] = o.ExtraAttributes
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1ResourceDiscoverySpec struct {
	value *ManagementV1alpha1ResourceDiscoverySpec
	isSet bool
}

func (v NullableManagementV1alpha1ResourceDiscoverySpec) Get() *ManagementV1alpha1ResourceDiscoverySpec {
	return v.value
}

func (v *NullableManagementV1alpha1ResourceDiscoverySpec) Set(val *ManagementV1alpha1ResourceDiscoverySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1ResourceDiscoverySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1ResourceDiscoverySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1ResourceDiscoverySpec(val *ManagementV1alpha1ResourceDiscoverySpec) *NullableManagementV1alpha1ResourceDiscoverySpec {
	return &NullableManagementV1alpha1ResourceDiscoverySpec{value: val, isSet: true}
}

func (v NullableManagementV1alpha1ResourceDiscoverySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1ResourceDiscoverySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


