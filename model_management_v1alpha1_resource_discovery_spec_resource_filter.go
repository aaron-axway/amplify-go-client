/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1ResourceDiscoverySpecResourceFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1ResourceDiscoverySpecResourceFilter{}

// ManagementV1alpha1ResourceDiscoverySpecResourceFilter Resource filter.
type ManagementV1alpha1ResourceDiscoverySpecResourceFilter struct {
	Names []string `json:"names,omitempty"`
	MatchLabels *map[string]string `json:"matchLabels,omitempty"`
}

// NewManagementV1alpha1ResourceDiscoverySpecResourceFilter instantiates a new ManagementV1alpha1ResourceDiscoverySpecResourceFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1ResourceDiscoverySpecResourceFilter() *ManagementV1alpha1ResourceDiscoverySpecResourceFilter {
	this := ManagementV1alpha1ResourceDiscoverySpecResourceFilter{}
	return &this
}

// NewManagementV1alpha1ResourceDiscoverySpecResourceFilterWithDefaults instantiates a new ManagementV1alpha1ResourceDiscoverySpecResourceFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1ResourceDiscoverySpecResourceFilterWithDefaults() *ManagementV1alpha1ResourceDiscoverySpecResourceFilter {
	this := ManagementV1alpha1ResourceDiscoverySpecResourceFilter{}
	return &this
}

// GetNames returns the Names field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) GetNames() []string {
	if o == nil || IsNil(o.Names) {
		var ret []string
		return ret
	}
	return o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) GetNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.Names) {
		return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) HasNames() bool {
	if o != nil && !IsNil(o.Names) {
		return true
	}

	return false
}

// SetNames gets a reference to the given []string and assigns it to the Names field.
func (o *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) SetNames(v []string) {
	o.Names = v
}

// GetMatchLabels returns the MatchLabels field value if set, zero value otherwise.
func (o *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) GetMatchLabels() map[string]string {
	if o == nil || IsNil(o.MatchLabels) {
		var ret map[string]string
		return ret
	}
	return *o.MatchLabels
}

// GetMatchLabelsOk returns a tuple with the MatchLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) GetMatchLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.MatchLabels) {
		return nil, false
	}
	return o.MatchLabels, true
}

// HasMatchLabels returns a boolean if a field has been set.
func (o *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) HasMatchLabels() bool {
	if o != nil && !IsNil(o.MatchLabels) {
		return true
	}

	return false
}

// SetMatchLabels gets a reference to the given map[string]string and assigns it to the MatchLabels field.
func (o *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) SetMatchLabels(v map[string]string) {
	o.MatchLabels = &v
}

func (o ManagementV1alpha1ResourceDiscoverySpecResourceFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1ResourceDiscoverySpecResourceFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Names) {
		toSerialize["names"] = o.Names
	}
	if !IsNil(o.MatchLabels) {
		toSerialize["matchLabels"] = o.MatchLabels
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1ResourceDiscoverySpecResourceFilter struct {
	value *ManagementV1alpha1ResourceDiscoverySpecResourceFilter
	isSet bool
}

func (v NullableManagementV1alpha1ResourceDiscoverySpecResourceFilter) Get() *ManagementV1alpha1ResourceDiscoverySpecResourceFilter {
	return v.value
}

func (v *NullableManagementV1alpha1ResourceDiscoverySpecResourceFilter) Set(val *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1ResourceDiscoverySpecResourceFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1ResourceDiscoverySpecResourceFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1ResourceDiscoverySpecResourceFilter(val *ManagementV1alpha1ResourceDiscoverySpecResourceFilter) *NullableManagementV1alpha1ResourceDiscoverySpecResourceFilter {
	return &NullableManagementV1alpha1ResourceDiscoverySpecResourceFilter{value: val, isSet: true}
}

func (v NullableManagementV1alpha1ResourceDiscoverySpecResourceFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1ResourceDiscoverySpecResourceFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


