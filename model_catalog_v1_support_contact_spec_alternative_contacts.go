/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the CatalogV1SupportContactSpecAlternativeContacts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1SupportContactSpecAlternativeContacts{}

// CatalogV1SupportContactSpecAlternativeContacts struct for CatalogV1SupportContactSpecAlternativeContacts
type CatalogV1SupportContactSpecAlternativeContacts struct {
	// Alternative contact URLs.
	Urls []CatalogV1SupportContactSpecAlternativeContactsUrlsInner `json:"urls,omitempty"`
}

// NewCatalogV1SupportContactSpecAlternativeContacts instantiates a new CatalogV1SupportContactSpecAlternativeContacts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1SupportContactSpecAlternativeContacts() *CatalogV1SupportContactSpecAlternativeContacts {
	this := CatalogV1SupportContactSpecAlternativeContacts{}
	return &this
}

// NewCatalogV1SupportContactSpecAlternativeContactsWithDefaults instantiates a new CatalogV1SupportContactSpecAlternativeContacts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1SupportContactSpecAlternativeContactsWithDefaults() *CatalogV1SupportContactSpecAlternativeContacts {
	this := CatalogV1SupportContactSpecAlternativeContacts{}
	return &this
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *CatalogV1SupportContactSpecAlternativeContacts) GetUrls() []CatalogV1SupportContactSpecAlternativeContactsUrlsInner {
	if o == nil || IsNil(o.Urls) {
		var ret []CatalogV1SupportContactSpecAlternativeContactsUrlsInner
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1SupportContactSpecAlternativeContacts) GetUrlsOk() ([]CatalogV1SupportContactSpecAlternativeContactsUrlsInner, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *CatalogV1SupportContactSpecAlternativeContacts) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []CatalogV1SupportContactSpecAlternativeContactsUrlsInner and assigns it to the Urls field.
func (o *CatalogV1SupportContactSpecAlternativeContacts) SetUrls(v []CatalogV1SupportContactSpecAlternativeContactsUrlsInner) {
	o.Urls = v
}

func (o CatalogV1SupportContactSpecAlternativeContacts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1SupportContactSpecAlternativeContacts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	return toSerialize, nil
}

type NullableCatalogV1SupportContactSpecAlternativeContacts struct {
	value *CatalogV1SupportContactSpecAlternativeContacts
	isSet bool
}

func (v NullableCatalogV1SupportContactSpecAlternativeContacts) Get() *CatalogV1SupportContactSpecAlternativeContacts {
	return v.value
}

func (v *NullableCatalogV1SupportContactSpecAlternativeContacts) Set(val *CatalogV1SupportContactSpecAlternativeContacts) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1SupportContactSpecAlternativeContacts) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1SupportContactSpecAlternativeContacts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1SupportContactSpecAlternativeContacts(val *CatalogV1SupportContactSpecAlternativeContacts) *NullableCatalogV1SupportContactSpecAlternativeContacts {
	return &NullableCatalogV1SupportContactSpecAlternativeContacts{value: val, isSet: true}
}

func (v NullableCatalogV1SupportContactSpecAlternativeContacts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1SupportContactSpecAlternativeContacts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


