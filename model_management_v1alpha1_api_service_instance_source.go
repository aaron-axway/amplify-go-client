/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1APIServiceInstanceSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1APIServiceInstanceSource{}

// ManagementV1alpha1APIServiceInstanceSource struct for ManagementV1alpha1APIServiceInstanceSource
type ManagementV1alpha1APIServiceInstanceSource struct {
	DataplaneType *ManagementV1alpha1APIServiceSourceDataplaneType `json:"dataplaneType,omitempty"`
	References *ManagementV1alpha1APIServiceInstanceSourceReferences `json:"references,omitempty"`
	Compliance *ManagementV1alpha1APIServiceInstanceSourceCompliance `json:"compliance,omitempty"`
}

// NewManagementV1alpha1APIServiceInstanceSource instantiates a new ManagementV1alpha1APIServiceInstanceSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1APIServiceInstanceSource() *ManagementV1alpha1APIServiceInstanceSource {
	this := ManagementV1alpha1APIServiceInstanceSource{}
	return &this
}

// NewManagementV1alpha1APIServiceInstanceSourceWithDefaults instantiates a new ManagementV1alpha1APIServiceInstanceSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1APIServiceInstanceSourceWithDefaults() *ManagementV1alpha1APIServiceInstanceSource {
	this := ManagementV1alpha1APIServiceInstanceSource{}
	return &this
}

// GetDataplaneType returns the DataplaneType field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceInstanceSource) GetDataplaneType() ManagementV1alpha1APIServiceSourceDataplaneType {
	if o == nil || IsNil(o.DataplaneType) {
		var ret ManagementV1alpha1APIServiceSourceDataplaneType
		return ret
	}
	return *o.DataplaneType
}

// GetDataplaneTypeOk returns a tuple with the DataplaneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceInstanceSource) GetDataplaneTypeOk() (*ManagementV1alpha1APIServiceSourceDataplaneType, bool) {
	if o == nil || IsNil(o.DataplaneType) {
		return nil, false
	}
	return o.DataplaneType, true
}

// HasDataplaneType returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceInstanceSource) HasDataplaneType() bool {
	if o != nil && !IsNil(o.DataplaneType) {
		return true
	}

	return false
}

// SetDataplaneType gets a reference to the given ManagementV1alpha1APIServiceSourceDataplaneType and assigns it to the DataplaneType field.
func (o *ManagementV1alpha1APIServiceInstanceSource) SetDataplaneType(v ManagementV1alpha1APIServiceSourceDataplaneType) {
	o.DataplaneType = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceInstanceSource) GetReferences() ManagementV1alpha1APIServiceInstanceSourceReferences {
	if o == nil || IsNil(o.References) {
		var ret ManagementV1alpha1APIServiceInstanceSourceReferences
		return ret
	}
	return *o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceInstanceSource) GetReferencesOk() (*ManagementV1alpha1APIServiceInstanceSourceReferences, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceInstanceSource) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given ManagementV1alpha1APIServiceInstanceSourceReferences and assigns it to the References field.
func (o *ManagementV1alpha1APIServiceInstanceSource) SetReferences(v ManagementV1alpha1APIServiceInstanceSourceReferences) {
	o.References = &v
}

// GetCompliance returns the Compliance field value if set, zero value otherwise.
func (o *ManagementV1alpha1APIServiceInstanceSource) GetCompliance() ManagementV1alpha1APIServiceInstanceSourceCompliance {
	if o == nil || IsNil(o.Compliance) {
		var ret ManagementV1alpha1APIServiceInstanceSourceCompliance
		return ret
	}
	return *o.Compliance
}

// GetComplianceOk returns a tuple with the Compliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APIServiceInstanceSource) GetComplianceOk() (*ManagementV1alpha1APIServiceInstanceSourceCompliance, bool) {
	if o == nil || IsNil(o.Compliance) {
		return nil, false
	}
	return o.Compliance, true
}

// HasCompliance returns a boolean if a field has been set.
func (o *ManagementV1alpha1APIServiceInstanceSource) HasCompliance() bool {
	if o != nil && !IsNil(o.Compliance) {
		return true
	}

	return false
}

// SetCompliance gets a reference to the given ManagementV1alpha1APIServiceInstanceSourceCompliance and assigns it to the Compliance field.
func (o *ManagementV1alpha1APIServiceInstanceSource) SetCompliance(v ManagementV1alpha1APIServiceInstanceSourceCompliance) {
	o.Compliance = &v
}

func (o ManagementV1alpha1APIServiceInstanceSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1APIServiceInstanceSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataplaneType) {
		toSerialize["dataplaneType"] = o.DataplaneType
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Compliance) {
		toSerialize["compliance"] = o.Compliance
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1APIServiceInstanceSource struct {
	value *ManagementV1alpha1APIServiceInstanceSource
	isSet bool
}

func (v NullableManagementV1alpha1APIServiceInstanceSource) Get() *ManagementV1alpha1APIServiceInstanceSource {
	return v.value
}

func (v *NullableManagementV1alpha1APIServiceInstanceSource) Set(val *ManagementV1alpha1APIServiceInstanceSource) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1APIServiceInstanceSource) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1APIServiceInstanceSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1APIServiceInstanceSource(val *ManagementV1alpha1APIServiceInstanceSource) *NullableManagementV1alpha1APIServiceInstanceSource {
	return &NullableManagementV1alpha1APIServiceInstanceSource{value: val, isSet: true}
}

func (v NullableManagementV1alpha1APIServiceInstanceSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1APIServiceInstanceSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


