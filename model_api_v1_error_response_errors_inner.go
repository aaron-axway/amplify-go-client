/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the ApiV1ErrorResponseErrorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV1ErrorResponseErrorsInner{}

// ApiV1ErrorResponseErrorsInner struct for ApiV1ErrorResponseErrorsInner
type ApiV1ErrorResponseErrorsInner struct {
	Status *int32 `json:"status,omitempty"`
	Title *string `json:"title,omitempty"`
	Detail *string `json:"detail,omitempty"`
	Meta *ApiV1ErrorResponseErrorsInnerMeta `json:"meta,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiV1ErrorResponseErrorsInner ApiV1ErrorResponseErrorsInner

// NewApiV1ErrorResponseErrorsInner instantiates a new ApiV1ErrorResponseErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV1ErrorResponseErrorsInner() *ApiV1ErrorResponseErrorsInner {
	this := ApiV1ErrorResponseErrorsInner{}
	return &this
}

// NewApiV1ErrorResponseErrorsInnerWithDefaults instantiates a new ApiV1ErrorResponseErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV1ErrorResponseErrorsInnerWithDefaults() *ApiV1ErrorResponseErrorsInner {
	this := ApiV1ErrorResponseErrorsInner{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiV1ErrorResponseErrorsInner) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1ErrorResponseErrorsInner) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiV1ErrorResponseErrorsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *ApiV1ErrorResponseErrorsInner) SetStatus(v int32) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ApiV1ErrorResponseErrorsInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1ErrorResponseErrorsInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ApiV1ErrorResponseErrorsInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ApiV1ErrorResponseErrorsInner) SetTitle(v string) {
	o.Title = &v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ApiV1ErrorResponseErrorsInner) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1ErrorResponseErrorsInner) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ApiV1ErrorResponseErrorsInner) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ApiV1ErrorResponseErrorsInner) SetDetail(v string) {
	o.Detail = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ApiV1ErrorResponseErrorsInner) GetMeta() ApiV1ErrorResponseErrorsInnerMeta {
	if o == nil || IsNil(o.Meta) {
		var ret ApiV1ErrorResponseErrorsInnerMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1ErrorResponseErrorsInner) GetMetaOk() (*ApiV1ErrorResponseErrorsInnerMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ApiV1ErrorResponseErrorsInner) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ApiV1ErrorResponseErrorsInnerMeta and assigns it to the Meta field.
func (o *ApiV1ErrorResponseErrorsInner) SetMeta(v ApiV1ErrorResponseErrorsInnerMeta) {
	o.Meta = &v
}

func (o ApiV1ErrorResponseErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV1ErrorResponseErrorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiV1ErrorResponseErrorsInner) UnmarshalJSON(data []byte) (err error) {
	varApiV1ErrorResponseErrorsInner := _ApiV1ErrorResponseErrorsInner{}

	err = json.Unmarshal(data, &varApiV1ErrorResponseErrorsInner)

	if err != nil {
		return err
	}

	*o = ApiV1ErrorResponseErrorsInner(varApiV1ErrorResponseErrorsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "title")
		delete(additionalProperties, "detail")
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiV1ErrorResponseErrorsInner struct {
	value *ApiV1ErrorResponseErrorsInner
	isSet bool
}

func (v NullableApiV1ErrorResponseErrorsInner) Get() *ApiV1ErrorResponseErrorsInner {
	return v.value
}

func (v *NullableApiV1ErrorResponseErrorsInner) Set(val *ApiV1ErrorResponseErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV1ErrorResponseErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV1ErrorResponseErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV1ErrorResponseErrorsInner(val *ApiV1ErrorResponseErrorsInner) *NullableApiV1ErrorResponseErrorsInner {
	return &NullableApiV1ErrorResponseErrorsInner{value: val, isSet: true}
}

func (v NullableApiV1ErrorResponseErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV1ErrorResponseErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


