/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogV1alpha1ReleaseTagSpecPreviousReleases type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1ReleaseTagSpecPreviousReleases{}

// CatalogV1alpha1ReleaseTagSpecPreviousReleases struct for CatalogV1alpha1ReleaseTagSpecPreviousReleases
type CatalogV1alpha1ReleaseTagSpecPreviousReleases struct {
	// Updates all prior non-archived releases to the desired state.  The 'archived' state is currently available only for Product ReleaseTags. 
	UpdateState *string `json:"updateState,omitempty"`
}

// NewCatalogV1alpha1ReleaseTagSpecPreviousReleases instantiates a new CatalogV1alpha1ReleaseTagSpecPreviousReleases object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1ReleaseTagSpecPreviousReleases() *CatalogV1alpha1ReleaseTagSpecPreviousReleases {
	this := CatalogV1alpha1ReleaseTagSpecPreviousReleases{}
	return &this
}

// NewCatalogV1alpha1ReleaseTagSpecPreviousReleasesWithDefaults instantiates a new CatalogV1alpha1ReleaseTagSpecPreviousReleases object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1ReleaseTagSpecPreviousReleasesWithDefaults() *CatalogV1alpha1ReleaseTagSpecPreviousReleases {
	this := CatalogV1alpha1ReleaseTagSpecPreviousReleases{}
	return &this
}

// GetUpdateState returns the UpdateState field value if set, zero value otherwise.
func (o *CatalogV1alpha1ReleaseTagSpecPreviousReleases) GetUpdateState() string {
	if o == nil || IsNil(o.UpdateState) {
		var ret string
		return ret
	}
	return *o.UpdateState
}

// GetUpdateStateOk returns a tuple with the UpdateState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1ReleaseTagSpecPreviousReleases) GetUpdateStateOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateState) {
		return nil, false
	}
	return o.UpdateState, true
}

// HasUpdateState returns a boolean if a field has been set.
func (o *CatalogV1alpha1ReleaseTagSpecPreviousReleases) HasUpdateState() bool {
	if o != nil && !IsNil(o.UpdateState) {
		return true
	}

	return false
}

// SetUpdateState gets a reference to the given string and assigns it to the UpdateState field.
func (o *CatalogV1alpha1ReleaseTagSpecPreviousReleases) SetUpdateState(v string) {
	o.UpdateState = &v
}

func (o CatalogV1alpha1ReleaseTagSpecPreviousReleases) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1ReleaseTagSpecPreviousReleases) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UpdateState) {
		toSerialize["updateState"] = o.UpdateState
	}
	return toSerialize, nil
}

type NullableCatalogV1alpha1ReleaseTagSpecPreviousReleases struct {
	value *CatalogV1alpha1ReleaseTagSpecPreviousReleases
	isSet bool
}

func (v NullableCatalogV1alpha1ReleaseTagSpecPreviousReleases) Get() *CatalogV1alpha1ReleaseTagSpecPreviousReleases {
	return v.value
}

func (v *NullableCatalogV1alpha1ReleaseTagSpecPreviousReleases) Set(val *CatalogV1alpha1ReleaseTagSpecPreviousReleases) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1ReleaseTagSpecPreviousReleases) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1ReleaseTagSpecPreviousReleases) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1ReleaseTagSpecPreviousReleases(val *CatalogV1alpha1ReleaseTagSpecPreviousReleases) *NullableCatalogV1alpha1ReleaseTagSpecPreviousReleases {
	return &NullableCatalogV1alpha1ReleaseTagSpecPreviousReleases{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1ReleaseTagSpecPreviousReleases) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1ReleaseTagSpecPreviousReleases) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


