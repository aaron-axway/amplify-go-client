/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManagementV1alpha1AccessRequestSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1AccessRequestSpec{}

// ManagementV1alpha1AccessRequestSpec struct for ManagementV1alpha1AccessRequestSpec
type ManagementV1alpha1AccessRequestSpec struct {
	// The name of an APIServiceInstance resource that specifies where the API is deployed.
	ApiServiceInstance string `json:"apiServiceInstance"`
	// The name of an ManagedApplication resource that groups set of credentials.
	ManagedApplication string `json:"managedApplication"`
	// The value that matches the AccessRequestDefinition schema linked to the referenced APIServiceInstance.
	Data map[string]interface{} `json:"data"`
	Quota *ManagementV1alpha1AccessRequestSpecQuota `json:"quota,omitempty"`
	// The AccessRequest from which this resource is being migrated from. Reference must be linked to the same Application and under the same Environment.
	AccessRequest *string `json:"accessRequest,omitempty"`
}

type _ManagementV1alpha1AccessRequestSpec ManagementV1alpha1AccessRequestSpec

// NewManagementV1alpha1AccessRequestSpec instantiates a new ManagementV1alpha1AccessRequestSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1AccessRequestSpec(apiServiceInstance string, managedApplication string, data map[string]interface{}) *ManagementV1alpha1AccessRequestSpec {
	this := ManagementV1alpha1AccessRequestSpec{}
	this.ApiServiceInstance = apiServiceInstance
	this.ManagedApplication = managedApplication
	this.Data = data
	return &this
}

// NewManagementV1alpha1AccessRequestSpecWithDefaults instantiates a new ManagementV1alpha1AccessRequestSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1AccessRequestSpecWithDefaults() *ManagementV1alpha1AccessRequestSpec {
	this := ManagementV1alpha1AccessRequestSpec{}
	return &this
}

// GetApiServiceInstance returns the ApiServiceInstance field value
func (o *ManagementV1alpha1AccessRequestSpec) GetApiServiceInstance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiServiceInstance
}

// GetApiServiceInstanceOk returns a tuple with the ApiServiceInstance field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1AccessRequestSpec) GetApiServiceInstanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiServiceInstance, true
}

// SetApiServiceInstance sets field value
func (o *ManagementV1alpha1AccessRequestSpec) SetApiServiceInstance(v string) {
	o.ApiServiceInstance = v
}

// GetManagedApplication returns the ManagedApplication field value
func (o *ManagementV1alpha1AccessRequestSpec) GetManagedApplication() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManagedApplication
}

// GetManagedApplicationOk returns a tuple with the ManagedApplication field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1AccessRequestSpec) GetManagedApplicationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManagedApplication, true
}

// SetManagedApplication sets field value
func (o *ManagementV1alpha1AccessRequestSpec) SetManagedApplication(v string) {
	o.ManagedApplication = v
}

// GetData returns the Data field value
func (o *ManagementV1alpha1AccessRequestSpec) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1AccessRequestSpec) GetDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ManagementV1alpha1AccessRequestSpec) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetQuota returns the Quota field value if set, zero value otherwise.
func (o *ManagementV1alpha1AccessRequestSpec) GetQuota() ManagementV1alpha1AccessRequestSpecQuota {
	if o == nil || IsNil(o.Quota) {
		var ret ManagementV1alpha1AccessRequestSpecQuota
		return ret
	}
	return *o.Quota
}

// GetQuotaOk returns a tuple with the Quota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1AccessRequestSpec) GetQuotaOk() (*ManagementV1alpha1AccessRequestSpecQuota, bool) {
	if o == nil || IsNil(o.Quota) {
		return nil, false
	}
	return o.Quota, true
}

// HasQuota returns a boolean if a field has been set.
func (o *ManagementV1alpha1AccessRequestSpec) HasQuota() bool {
	if o != nil && !IsNil(o.Quota) {
		return true
	}

	return false
}

// SetQuota gets a reference to the given ManagementV1alpha1AccessRequestSpecQuota and assigns it to the Quota field.
func (o *ManagementV1alpha1AccessRequestSpec) SetQuota(v ManagementV1alpha1AccessRequestSpecQuota) {
	o.Quota = &v
}

// GetAccessRequest returns the AccessRequest field value if set, zero value otherwise.
func (o *ManagementV1alpha1AccessRequestSpec) GetAccessRequest() string {
	if o == nil || IsNil(o.AccessRequest) {
		var ret string
		return ret
	}
	return *o.AccessRequest
}

// GetAccessRequestOk returns a tuple with the AccessRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1AccessRequestSpec) GetAccessRequestOk() (*string, bool) {
	if o == nil || IsNil(o.AccessRequest) {
		return nil, false
	}
	return o.AccessRequest, true
}

// HasAccessRequest returns a boolean if a field has been set.
func (o *ManagementV1alpha1AccessRequestSpec) HasAccessRequest() bool {
	if o != nil && !IsNil(o.AccessRequest) {
		return true
	}

	return false
}

// SetAccessRequest gets a reference to the given string and assigns it to the AccessRequest field.
func (o *ManagementV1alpha1AccessRequestSpec) SetAccessRequest(v string) {
	o.AccessRequest = &v
}

func (o ManagementV1alpha1AccessRequestSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1AccessRequestSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiServiceInstance"] = o.ApiServiceInstance
	toSerialize["managedApplication"] = o.ManagedApplication
	toSerialize["data"] = o.Data
	if !IsNil(o.Quota) {
		toSerialize["quota"] = o.Quota
	}
	if !IsNil(o.AccessRequest) {
		toSerialize["accessRequest"] = o.AccessRequest
	}
	return toSerialize, nil
}

func (o *ManagementV1alpha1AccessRequestSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"apiServiceInstance",
		"managedApplication",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagementV1alpha1AccessRequestSpec := _ManagementV1alpha1AccessRequestSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManagementV1alpha1AccessRequestSpec)

	if err != nil {
		return err
	}

	*o = ManagementV1alpha1AccessRequestSpec(varManagementV1alpha1AccessRequestSpec)

	return err
}

type NullableManagementV1alpha1AccessRequestSpec struct {
	value *ManagementV1alpha1AccessRequestSpec
	isSet bool
}

func (v NullableManagementV1alpha1AccessRequestSpec) Get() *ManagementV1alpha1AccessRequestSpec {
	return v.value
}

func (v *NullableManagementV1alpha1AccessRequestSpec) Set(val *ManagementV1alpha1AccessRequestSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1AccessRequestSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1AccessRequestSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1AccessRequestSpec(val *ManagementV1alpha1AccessRequestSpec) *NullableManagementV1alpha1AccessRequestSpec {
	return &NullableManagementV1alpha1AccessRequestSpec{value: val, isSet: true}
}

func (v NullableManagementV1alpha1AccessRequestSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1AccessRequestSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


