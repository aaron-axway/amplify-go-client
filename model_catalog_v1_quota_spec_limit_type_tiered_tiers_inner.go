/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogV1QuotaSpecLimitTypeTieredTiersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1QuotaSpecLimitTypeTieredTiersInner{}

// CatalogV1QuotaSpecLimitTypeTieredTiersInner struct for CatalogV1QuotaSpecLimitTypeTieredTiersInner
type CatalogV1QuotaSpecLimitTypeTieredTiersInner struct {
	// The limit start of the tier provided.
	From int32 `json:"from"`
	// The limit end of the tier provided.
	To int32 `json:"to"`
	// The tier price.
	Cost float64 `json:"cost"`
	// The flat fee for the tier.
	FlatFee float64 `json:"flatFee"`
}

type _CatalogV1QuotaSpecLimitTypeTieredTiersInner CatalogV1QuotaSpecLimitTypeTieredTiersInner

// NewCatalogV1QuotaSpecLimitTypeTieredTiersInner instantiates a new CatalogV1QuotaSpecLimitTypeTieredTiersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1QuotaSpecLimitTypeTieredTiersInner(from int32, to int32, cost float64, flatFee float64) *CatalogV1QuotaSpecLimitTypeTieredTiersInner {
	this := CatalogV1QuotaSpecLimitTypeTieredTiersInner{}
	this.From = from
	this.To = to
	this.Cost = cost
	this.FlatFee = flatFee
	return &this
}

// NewCatalogV1QuotaSpecLimitTypeTieredTiersInnerWithDefaults instantiates a new CatalogV1QuotaSpecLimitTypeTieredTiersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1QuotaSpecLimitTypeTieredTiersInnerWithDefaults() *CatalogV1QuotaSpecLimitTypeTieredTiersInner {
	this := CatalogV1QuotaSpecLimitTypeTieredTiersInner{}
	return &this
}

// GetFrom returns the From field value
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) GetFrom() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) GetFromOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) SetFrom(v int32) {
	o.From = v
}

// GetTo returns the To field value
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) GetTo() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) GetToOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) SetTo(v int32) {
	o.To = v
}

// GetCost returns the Cost field value
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) GetCost() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Cost
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) GetCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cost, true
}

// SetCost sets field value
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) SetCost(v float64) {
	o.Cost = v
}

// GetFlatFee returns the FlatFee field value
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) GetFlatFee() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.FlatFee
}

// GetFlatFeeOk returns a tuple with the FlatFee field value
// and a boolean to check if the value has been set.
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) GetFlatFeeOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlatFee, true
}

// SetFlatFee sets field value
func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) SetFlatFee(v float64) {
	o.FlatFee = v
}

func (o CatalogV1QuotaSpecLimitTypeTieredTiersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1QuotaSpecLimitTypeTieredTiersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["from"] = o.From
	toSerialize["to"] = o.To
	toSerialize["cost"] = o.Cost
	toSerialize["flatFee"] = o.FlatFee
	return toSerialize, nil
}

func (o *CatalogV1QuotaSpecLimitTypeTieredTiersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"from",
		"to",
		"cost",
		"flatFee",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogV1QuotaSpecLimitTypeTieredTiersInner := _CatalogV1QuotaSpecLimitTypeTieredTiersInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogV1QuotaSpecLimitTypeTieredTiersInner)

	if err != nil {
		return err
	}

	*o = CatalogV1QuotaSpecLimitTypeTieredTiersInner(varCatalogV1QuotaSpecLimitTypeTieredTiersInner)

	return err
}

type NullableCatalogV1QuotaSpecLimitTypeTieredTiersInner struct {
	value *CatalogV1QuotaSpecLimitTypeTieredTiersInner
	isSet bool
}

func (v NullableCatalogV1QuotaSpecLimitTypeTieredTiersInner) Get() *CatalogV1QuotaSpecLimitTypeTieredTiersInner {
	return v.value
}

func (v *NullableCatalogV1QuotaSpecLimitTypeTieredTiersInner) Set(val *CatalogV1QuotaSpecLimitTypeTieredTiersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1QuotaSpecLimitTypeTieredTiersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1QuotaSpecLimitTypeTieredTiersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1QuotaSpecLimitTypeTieredTiersInner(val *CatalogV1QuotaSpecLimitTypeTieredTiersInner) *NullableCatalogV1QuotaSpecLimitTypeTieredTiersInner {
	return &NullableCatalogV1QuotaSpecLimitTypeTieredTiersInner{value: val, isSet: true}
}

func (v NullableCatalogV1QuotaSpecLimitTypeTieredTiersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1QuotaSpecLimitTypeTieredTiersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


