/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogV1DocumentResourceReferencesPlatformSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1DocumentResourceReferencesPlatformSettings{}

// CatalogV1DocumentResourceReferencesPlatformSettings struct for CatalogV1DocumentResourceReferencesPlatformSettings
type CatalogV1DocumentResourceReferencesPlatformSettings struct {
	// Defines the DocumentResource used in the platform settings or not.
	Used bool `json:"used"`
}

type _CatalogV1DocumentResourceReferencesPlatformSettings CatalogV1DocumentResourceReferencesPlatformSettings

// NewCatalogV1DocumentResourceReferencesPlatformSettings instantiates a new CatalogV1DocumentResourceReferencesPlatformSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1DocumentResourceReferencesPlatformSettings(used bool) *CatalogV1DocumentResourceReferencesPlatformSettings {
	this := CatalogV1DocumentResourceReferencesPlatformSettings{}
	this.Used = used
	return &this
}

// NewCatalogV1DocumentResourceReferencesPlatformSettingsWithDefaults instantiates a new CatalogV1DocumentResourceReferencesPlatformSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1DocumentResourceReferencesPlatformSettingsWithDefaults() *CatalogV1DocumentResourceReferencesPlatformSettings {
	this := CatalogV1DocumentResourceReferencesPlatformSettings{}
	return &this
}

// GetUsed returns the Used field value
func (o *CatalogV1DocumentResourceReferencesPlatformSettings) GetUsed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Used
}

// GetUsedOk returns a tuple with the Used field value
// and a boolean to check if the value has been set.
func (o *CatalogV1DocumentResourceReferencesPlatformSettings) GetUsedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Used, true
}

// SetUsed sets field value
func (o *CatalogV1DocumentResourceReferencesPlatformSettings) SetUsed(v bool) {
	o.Used = v
}

func (o CatalogV1DocumentResourceReferencesPlatformSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1DocumentResourceReferencesPlatformSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["used"] = o.Used
	return toSerialize, nil
}

func (o *CatalogV1DocumentResourceReferencesPlatformSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"used",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogV1DocumentResourceReferencesPlatformSettings := _CatalogV1DocumentResourceReferencesPlatformSettings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogV1DocumentResourceReferencesPlatformSettings)

	if err != nil {
		return err
	}

	*o = CatalogV1DocumentResourceReferencesPlatformSettings(varCatalogV1DocumentResourceReferencesPlatformSettings)

	return err
}

type NullableCatalogV1DocumentResourceReferencesPlatformSettings struct {
	value *CatalogV1DocumentResourceReferencesPlatformSettings
	isSet bool
}

func (v NullableCatalogV1DocumentResourceReferencesPlatformSettings) Get() *CatalogV1DocumentResourceReferencesPlatformSettings {
	return v.value
}

func (v *NullableCatalogV1DocumentResourceReferencesPlatformSettings) Set(val *CatalogV1DocumentResourceReferencesPlatformSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1DocumentResourceReferencesPlatformSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1DocumentResourceReferencesPlatformSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1DocumentResourceReferencesPlatformSettings(val *CatalogV1DocumentResourceReferencesPlatformSettings) *NullableCatalogV1DocumentResourceReferencesPlatformSettings {
	return &NullableCatalogV1DocumentResourceReferencesPlatformSettings{value: val, isSet: true}
}

func (v NullableCatalogV1DocumentResourceReferencesPlatformSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1DocumentResourceReferencesPlatformSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


