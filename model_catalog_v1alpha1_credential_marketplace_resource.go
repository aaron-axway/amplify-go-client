/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogV1alpha1CredentialMarketplaceResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1CredentialMarketplaceResource{}

// CatalogV1alpha1CredentialMarketplaceResource The Marketplace Credential resource details.
type CatalogV1alpha1CredentialMarketplaceResource struct {
	Metadata CatalogV1alpha1ApplicationMarketplaceResourceMetadata `json:"metadata"`
	Owner *CatalogV1alpha1CredentialMarketplaceResourceOwner `json:"owner,omitempty"`
}

type _CatalogV1alpha1CredentialMarketplaceResource CatalogV1alpha1CredentialMarketplaceResource

// NewCatalogV1alpha1CredentialMarketplaceResource instantiates a new CatalogV1alpha1CredentialMarketplaceResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1CredentialMarketplaceResource(metadata CatalogV1alpha1ApplicationMarketplaceResourceMetadata) *CatalogV1alpha1CredentialMarketplaceResource {
	this := CatalogV1alpha1CredentialMarketplaceResource{}
	this.Metadata = metadata
	return &this
}

// NewCatalogV1alpha1CredentialMarketplaceResourceWithDefaults instantiates a new CatalogV1alpha1CredentialMarketplaceResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1CredentialMarketplaceResourceWithDefaults() *CatalogV1alpha1CredentialMarketplaceResource {
	this := CatalogV1alpha1CredentialMarketplaceResource{}
	return &this
}

// GetMetadata returns the Metadata field value
func (o *CatalogV1alpha1CredentialMarketplaceResource) GetMetadata() CatalogV1alpha1ApplicationMarketplaceResourceMetadata {
	if o == nil {
		var ret CatalogV1alpha1ApplicationMarketplaceResourceMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1CredentialMarketplaceResource) GetMetadataOk() (*CatalogV1alpha1ApplicationMarketplaceResourceMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *CatalogV1alpha1CredentialMarketplaceResource) SetMetadata(v CatalogV1alpha1ApplicationMarketplaceResourceMetadata) {
	o.Metadata = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *CatalogV1alpha1CredentialMarketplaceResource) GetOwner() CatalogV1alpha1CredentialMarketplaceResourceOwner {
	if o == nil || IsNil(o.Owner) {
		var ret CatalogV1alpha1CredentialMarketplaceResourceOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1CredentialMarketplaceResource) GetOwnerOk() (*CatalogV1alpha1CredentialMarketplaceResourceOwner, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *CatalogV1alpha1CredentialMarketplaceResource) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given CatalogV1alpha1CredentialMarketplaceResourceOwner and assigns it to the Owner field.
func (o *CatalogV1alpha1CredentialMarketplaceResource) SetOwner(v CatalogV1alpha1CredentialMarketplaceResourceOwner) {
	o.Owner = &v
}

func (o CatalogV1alpha1CredentialMarketplaceResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1CredentialMarketplaceResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metadata"] = o.Metadata
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	return toSerialize, nil
}

func (o *CatalogV1alpha1CredentialMarketplaceResource) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metadata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogV1alpha1CredentialMarketplaceResource := _CatalogV1alpha1CredentialMarketplaceResource{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogV1alpha1CredentialMarketplaceResource)

	if err != nil {
		return err
	}

	*o = CatalogV1alpha1CredentialMarketplaceResource(varCatalogV1alpha1CredentialMarketplaceResource)

	return err
}

type NullableCatalogV1alpha1CredentialMarketplaceResource struct {
	value *CatalogV1alpha1CredentialMarketplaceResource
	isSet bool
}

func (v NullableCatalogV1alpha1CredentialMarketplaceResource) Get() *CatalogV1alpha1CredentialMarketplaceResource {
	return v.value
}

func (v *NullableCatalogV1alpha1CredentialMarketplaceResource) Set(val *CatalogV1alpha1CredentialMarketplaceResource) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1CredentialMarketplaceResource) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1CredentialMarketplaceResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1CredentialMarketplaceResource(val *CatalogV1alpha1CredentialMarketplaceResource) *NullableCatalogV1alpha1CredentialMarketplaceResource {
	return &NullableCatalogV1alpha1CredentialMarketplaceResource{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1CredentialMarketplaceResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1CredentialMarketplaceResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


