/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogV1alpha1SubscriptionInvoiceSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1SubscriptionInvoiceSpec{}

// CatalogV1alpha1SubscriptionInvoiceSpec struct for CatalogV1alpha1SubscriptionInvoiceSpec
type CatalogV1alpha1SubscriptionInvoiceSpec struct {
	Cost *CatalogV1alpha1SubscriptionInvoiceSpecCost `json:"cost,omitempty"`
	Period *CatalogV1alpha1SubscriptionInvoiceSpecPeriod `json:"period,omitempty"`
	Quotas []CatalogV1alpha1SubscriptionInvoiceSpecQuotasInner `json:"quotas,omitempty"`
}

// NewCatalogV1alpha1SubscriptionInvoiceSpec instantiates a new CatalogV1alpha1SubscriptionInvoiceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1SubscriptionInvoiceSpec() *CatalogV1alpha1SubscriptionInvoiceSpec {
	this := CatalogV1alpha1SubscriptionInvoiceSpec{}
	return &this
}

// NewCatalogV1alpha1SubscriptionInvoiceSpecWithDefaults instantiates a new CatalogV1alpha1SubscriptionInvoiceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1SubscriptionInvoiceSpecWithDefaults() *CatalogV1alpha1SubscriptionInvoiceSpec {
	this := CatalogV1alpha1SubscriptionInvoiceSpec{}
	return &this
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) GetCost() CatalogV1alpha1SubscriptionInvoiceSpecCost {
	if o == nil || IsNil(o.Cost) {
		var ret CatalogV1alpha1SubscriptionInvoiceSpecCost
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) GetCostOk() (*CatalogV1alpha1SubscriptionInvoiceSpecCost, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given CatalogV1alpha1SubscriptionInvoiceSpecCost and assigns it to the Cost field.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) SetCost(v CatalogV1alpha1SubscriptionInvoiceSpecCost) {
	o.Cost = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) GetPeriod() CatalogV1alpha1SubscriptionInvoiceSpecPeriod {
	if o == nil || IsNil(o.Period) {
		var ret CatalogV1alpha1SubscriptionInvoiceSpecPeriod
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) GetPeriodOk() (*CatalogV1alpha1SubscriptionInvoiceSpecPeriod, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given CatalogV1alpha1SubscriptionInvoiceSpecPeriod and assigns it to the Period field.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) SetPeriod(v CatalogV1alpha1SubscriptionInvoiceSpecPeriod) {
	o.Period = &v
}

// GetQuotas returns the Quotas field value if set, zero value otherwise.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) GetQuotas() []CatalogV1alpha1SubscriptionInvoiceSpecQuotasInner {
	if o == nil || IsNil(o.Quotas) {
		var ret []CatalogV1alpha1SubscriptionInvoiceSpecQuotasInner
		return ret
	}
	return o.Quotas
}

// GetQuotasOk returns a tuple with the Quotas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) GetQuotasOk() ([]CatalogV1alpha1SubscriptionInvoiceSpecQuotasInner, bool) {
	if o == nil || IsNil(o.Quotas) {
		return nil, false
	}
	return o.Quotas, true
}

// HasQuotas returns a boolean if a field has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) HasQuotas() bool {
	if o != nil && !IsNil(o.Quotas) {
		return true
	}

	return false
}

// SetQuotas gets a reference to the given []CatalogV1alpha1SubscriptionInvoiceSpecQuotasInner and assigns it to the Quotas field.
func (o *CatalogV1alpha1SubscriptionInvoiceSpec) SetQuotas(v []CatalogV1alpha1SubscriptionInvoiceSpecQuotasInner) {
	o.Quotas = v
}

func (o CatalogV1alpha1SubscriptionInvoiceSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1SubscriptionInvoiceSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !IsNil(o.Quotas) {
		toSerialize["quotas"] = o.Quotas
	}
	return toSerialize, nil
}

type NullableCatalogV1alpha1SubscriptionInvoiceSpec struct {
	value *CatalogV1alpha1SubscriptionInvoiceSpec
	isSet bool
}

func (v NullableCatalogV1alpha1SubscriptionInvoiceSpec) Get() *CatalogV1alpha1SubscriptionInvoiceSpec {
	return v.value
}

func (v *NullableCatalogV1alpha1SubscriptionInvoiceSpec) Set(val *CatalogV1alpha1SubscriptionInvoiceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1SubscriptionInvoiceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1SubscriptionInvoiceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1SubscriptionInvoiceSpec(val *CatalogV1alpha1SubscriptionInvoiceSpec) *NullableCatalogV1alpha1SubscriptionInvoiceSpec {
	return &NullableCatalogV1alpha1SubscriptionInvoiceSpec{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1SubscriptionInvoiceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1SubscriptionInvoiceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


