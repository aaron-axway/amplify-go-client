/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogV1PublishedDocumentResourceSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1PublishedDocumentResourceSpec{}

// CatalogV1PublishedDocumentResourceSpec struct for CatalogV1PublishedDocumentResourceSpec
type CatalogV1PublishedDocumentResourceSpec struct {
	DocumentResource CatalogV1PublishedDocumentResourceSpecDocumentResource `json:"documentResource"`
}

type _CatalogV1PublishedDocumentResourceSpec CatalogV1PublishedDocumentResourceSpec

// NewCatalogV1PublishedDocumentResourceSpec instantiates a new CatalogV1PublishedDocumentResourceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1PublishedDocumentResourceSpec(documentResource CatalogV1PublishedDocumentResourceSpecDocumentResource) *CatalogV1PublishedDocumentResourceSpec {
	this := CatalogV1PublishedDocumentResourceSpec{}
	this.DocumentResource = documentResource
	return &this
}

// NewCatalogV1PublishedDocumentResourceSpecWithDefaults instantiates a new CatalogV1PublishedDocumentResourceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1PublishedDocumentResourceSpecWithDefaults() *CatalogV1PublishedDocumentResourceSpec {
	this := CatalogV1PublishedDocumentResourceSpec{}
	return &this
}

// GetDocumentResource returns the DocumentResource field value
func (o *CatalogV1PublishedDocumentResourceSpec) GetDocumentResource() CatalogV1PublishedDocumentResourceSpecDocumentResource {
	if o == nil {
		var ret CatalogV1PublishedDocumentResourceSpecDocumentResource
		return ret
	}

	return o.DocumentResource
}

// GetDocumentResourceOk returns a tuple with the DocumentResource field value
// and a boolean to check if the value has been set.
func (o *CatalogV1PublishedDocumentResourceSpec) GetDocumentResourceOk() (*CatalogV1PublishedDocumentResourceSpecDocumentResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentResource, true
}

// SetDocumentResource sets field value
func (o *CatalogV1PublishedDocumentResourceSpec) SetDocumentResource(v CatalogV1PublishedDocumentResourceSpecDocumentResource) {
	o.DocumentResource = v
}

func (o CatalogV1PublishedDocumentResourceSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1PublishedDocumentResourceSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["documentResource"] = o.DocumentResource
	return toSerialize, nil
}

func (o *CatalogV1PublishedDocumentResourceSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"documentResource",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogV1PublishedDocumentResourceSpec := _CatalogV1PublishedDocumentResourceSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogV1PublishedDocumentResourceSpec)

	if err != nil {
		return err
	}

	*o = CatalogV1PublishedDocumentResourceSpec(varCatalogV1PublishedDocumentResourceSpec)

	return err
}

type NullableCatalogV1PublishedDocumentResourceSpec struct {
	value *CatalogV1PublishedDocumentResourceSpec
	isSet bool
}

func (v NullableCatalogV1PublishedDocumentResourceSpec) Get() *CatalogV1PublishedDocumentResourceSpec {
	return v.value
}

func (v *NullableCatalogV1PublishedDocumentResourceSpec) Set(val *CatalogV1PublishedDocumentResourceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1PublishedDocumentResourceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1PublishedDocumentResourceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1PublishedDocumentResourceSpec(val *CatalogV1PublishedDocumentResourceSpec) *NullableCatalogV1PublishedDocumentResourceSpec {
	return &NullableCatalogV1PublishedDocumentResourceSpec{value: val, isSet: true}
}

func (v NullableCatalogV1PublishedDocumentResourceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1PublishedDocumentResourceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


