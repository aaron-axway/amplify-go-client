/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1TraceabilityAgentDataplane type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1TraceabilityAgentDataplane{}

// ManagementV1alpha1TraceabilityAgentDataplane struct for ManagementV1alpha1TraceabilityAgentDataplane
type ManagementV1alpha1TraceabilityAgentDataplane struct {
	Name *string `json:"name,omitempty"`
	// Defines the interval that the dataplane will be accessed (30m = 30 minutes, 5h 5m = 5 hours and 5 mins, 2d = 2 days). 30m minimum
	Frequency *string `json:"frequency,omitempty" validate:"regexp=^(\\\\d*[d])?(\\\\d*[h])?(\\\\d*[m])?$"`
	// Queues this agent to run a traffic collection process. Defaults to false
	QueueTrafficCollection *bool `json:"queueTrafficCollection,omitempty"`
}

// NewManagementV1alpha1TraceabilityAgentDataplane instantiates a new ManagementV1alpha1TraceabilityAgentDataplane object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1TraceabilityAgentDataplane() *ManagementV1alpha1TraceabilityAgentDataplane {
	this := ManagementV1alpha1TraceabilityAgentDataplane{}
	return &this
}

// NewManagementV1alpha1TraceabilityAgentDataplaneWithDefaults instantiates a new ManagementV1alpha1TraceabilityAgentDataplane object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1TraceabilityAgentDataplaneWithDefaults() *ManagementV1alpha1TraceabilityAgentDataplane {
	this := ManagementV1alpha1TraceabilityAgentDataplane{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) SetName(v string) {
	o.Name = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) GetFrequency() string {
	if o == nil || IsNil(o.Frequency) {
		var ret string
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) GetFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given string and assigns it to the Frequency field.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) SetFrequency(v string) {
	o.Frequency = &v
}

// GetQueueTrafficCollection returns the QueueTrafficCollection field value if set, zero value otherwise.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) GetQueueTrafficCollection() bool {
	if o == nil || IsNil(o.QueueTrafficCollection) {
		var ret bool
		return ret
	}
	return *o.QueueTrafficCollection
}

// GetQueueTrafficCollectionOk returns a tuple with the QueueTrafficCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) GetQueueTrafficCollectionOk() (*bool, bool) {
	if o == nil || IsNil(o.QueueTrafficCollection) {
		return nil, false
	}
	return o.QueueTrafficCollection, true
}

// HasQueueTrafficCollection returns a boolean if a field has been set.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) HasQueueTrafficCollection() bool {
	if o != nil && !IsNil(o.QueueTrafficCollection) {
		return true
	}

	return false
}

// SetQueueTrafficCollection gets a reference to the given bool and assigns it to the QueueTrafficCollection field.
func (o *ManagementV1alpha1TraceabilityAgentDataplane) SetQueueTrafficCollection(v bool) {
	o.QueueTrafficCollection = &v
}

func (o ManagementV1alpha1TraceabilityAgentDataplane) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1TraceabilityAgentDataplane) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.QueueTrafficCollection) {
		toSerialize["queueTrafficCollection"] = o.QueueTrafficCollection
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1TraceabilityAgentDataplane struct {
	value *ManagementV1alpha1TraceabilityAgentDataplane
	isSet bool
}

func (v NullableManagementV1alpha1TraceabilityAgentDataplane) Get() *ManagementV1alpha1TraceabilityAgentDataplane {
	return v.value
}

func (v *NullableManagementV1alpha1TraceabilityAgentDataplane) Set(val *ManagementV1alpha1TraceabilityAgentDataplane) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1TraceabilityAgentDataplane) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1TraceabilityAgentDataplane) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1TraceabilityAgentDataplane(val *ManagementV1alpha1TraceabilityAgentDataplane) *NullableManagementV1alpha1TraceabilityAgentDataplane {
	return &NullableManagementV1alpha1TraceabilityAgentDataplane{value: val, isSet: true}
}

func (v NullableManagementV1alpha1TraceabilityAgentDataplane) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1TraceabilityAgentDataplane) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


