/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema{}

// ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema Subscription definition properties to be used by the consumers.
type ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema struct {
	// Defines the subscription schema properties as key/value pairs.
	Properties []ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchemaPropertiesInner `json:"properties,omitempty"`
}

// NewManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema instantiates a new ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema() *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema {
	this := ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema{}
	return &this
}

// NewManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchemaWithDefaults instantiates a new ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchemaWithDefaults() *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema {
	this := ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema{}
	return &this
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) GetProperties() []ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchemaPropertiesInner {
	if o == nil || IsNil(o.Properties) {
		var ret []ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchemaPropertiesInner
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) GetPropertiesOk() ([]ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchemaPropertiesInner, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchemaPropertiesInner and assigns it to the Properties field.
func (o *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) SetProperties(v []ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchemaPropertiesInner) {
	o.Properties = v
}

func (o ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema struct {
	value *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema
	isSet bool
}

func (v NullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) Get() *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema {
	return v.value
}

func (v *NullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) Set(val *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema(val *ManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) *NullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema {
	return &NullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema{value: val, isSet: true}
}

func (v NullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1ConsumerSubscriptionDefinitionSpecSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


