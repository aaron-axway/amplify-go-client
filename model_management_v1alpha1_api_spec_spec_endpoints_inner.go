/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1APISpecSpecEndpointsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1APISpecSpecEndpointsInner{}

// ManagementV1alpha1APISpecSpecEndpointsInner struct for ManagementV1alpha1APISpecSpecEndpointsInner
type ManagementV1alpha1APISpecSpecEndpointsInner struct {
	// The type of the endpoint.
	Type *string `json:"type,omitempty"`
	// The host of the pod <namespace>.<pod-name>
	Host *string `json:"host,omitempty"`
	// The port of the pod on which this spec was discovered.
	Port *string `json:"port,omitempty"`
	// The path on which this spec was discovered.
	Path *string `json:"path,omitempty"`
	// The labels for the pod this spec was discovered on.
	Labels *map[string]string `json:"labels,omitempty"`
}

// NewManagementV1alpha1APISpecSpecEndpointsInner instantiates a new ManagementV1alpha1APISpecSpecEndpointsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1APISpecSpecEndpointsInner() *ManagementV1alpha1APISpecSpecEndpointsInner {
	this := ManagementV1alpha1APISpecSpecEndpointsInner{}
	return &this
}

// NewManagementV1alpha1APISpecSpecEndpointsInnerWithDefaults instantiates a new ManagementV1alpha1APISpecSpecEndpointsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1APISpecSpecEndpointsInnerWithDefaults() *ManagementV1alpha1APISpecSpecEndpointsInner {
	this := ManagementV1alpha1APISpecSpecEndpointsInner{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) SetType(v string) {
	o.Type = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) SetPort(v string) {
	o.Port = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) SetPath(v string) {
	o.Path = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *ManagementV1alpha1APISpecSpecEndpointsInner) SetLabels(v map[string]string) {
	o.Labels = &v
}

func (o ManagementV1alpha1APISpecSpecEndpointsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1APISpecSpecEndpointsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1APISpecSpecEndpointsInner struct {
	value *ManagementV1alpha1APISpecSpecEndpointsInner
	isSet bool
}

func (v NullableManagementV1alpha1APISpecSpecEndpointsInner) Get() *ManagementV1alpha1APISpecSpecEndpointsInner {
	return v.value
}

func (v *NullableManagementV1alpha1APISpecSpecEndpointsInner) Set(val *ManagementV1alpha1APISpecSpecEndpointsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1APISpecSpecEndpointsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1APISpecSpecEndpointsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1APISpecSpecEndpointsInner(val *ManagementV1alpha1APISpecSpecEndpointsInner) *NullableManagementV1alpha1APISpecSpecEndpointsInner {
	return &NullableManagementV1alpha1APISpecSpecEndpointsInner{value: val, isSet: true}
}

func (v NullableManagementV1alpha1APISpecSpecEndpointsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1APISpecSpecEndpointsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


