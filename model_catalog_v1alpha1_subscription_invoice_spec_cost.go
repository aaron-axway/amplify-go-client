/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the CatalogV1alpha1SubscriptionInvoiceSpecCost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1SubscriptionInvoiceSpecCost{}

// CatalogV1alpha1SubscriptionInvoiceSpecCost The invoice generated cost
type CatalogV1alpha1SubscriptionInvoiceSpecCost struct {
	// The computed cost of the entire invoice, including plan and quota items costs.
	Total *float64 `json:"total,omitempty"`
	Plan *CatalogV1alpha1SubscriptionInvoiceSpecCostPlan `json:"plan,omitempty"`
}

// NewCatalogV1alpha1SubscriptionInvoiceSpecCost instantiates a new CatalogV1alpha1SubscriptionInvoiceSpecCost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1SubscriptionInvoiceSpecCost() *CatalogV1alpha1SubscriptionInvoiceSpecCost {
	this := CatalogV1alpha1SubscriptionInvoiceSpecCost{}
	return &this
}

// NewCatalogV1alpha1SubscriptionInvoiceSpecCostWithDefaults instantiates a new CatalogV1alpha1SubscriptionInvoiceSpecCost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1SubscriptionInvoiceSpecCostWithDefaults() *CatalogV1alpha1SubscriptionInvoiceSpecCost {
	this := CatalogV1alpha1SubscriptionInvoiceSpecCost{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecCost) GetTotal() float64 {
	if o == nil || IsNil(o.Total) {
		var ret float64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecCost) GetTotalOk() (*float64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecCost) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float64 and assigns it to the Total field.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecCost) SetTotal(v float64) {
	o.Total = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecCost) GetPlan() CatalogV1alpha1SubscriptionInvoiceSpecCostPlan {
	if o == nil || IsNil(o.Plan) {
		var ret CatalogV1alpha1SubscriptionInvoiceSpecCostPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecCost) GetPlanOk() (*CatalogV1alpha1SubscriptionInvoiceSpecCostPlan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecCost) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given CatalogV1alpha1SubscriptionInvoiceSpecCostPlan and assigns it to the Plan field.
func (o *CatalogV1alpha1SubscriptionInvoiceSpecCost) SetPlan(v CatalogV1alpha1SubscriptionInvoiceSpecCostPlan) {
	o.Plan = &v
}

func (o CatalogV1alpha1SubscriptionInvoiceSpecCost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1SubscriptionInvoiceSpecCost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	return toSerialize, nil
}

type NullableCatalogV1alpha1SubscriptionInvoiceSpecCost struct {
	value *CatalogV1alpha1SubscriptionInvoiceSpecCost
	isSet bool
}

func (v NullableCatalogV1alpha1SubscriptionInvoiceSpecCost) Get() *CatalogV1alpha1SubscriptionInvoiceSpecCost {
	return v.value
}

func (v *NullableCatalogV1alpha1SubscriptionInvoiceSpecCost) Set(val *CatalogV1alpha1SubscriptionInvoiceSpecCost) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1SubscriptionInvoiceSpecCost) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1SubscriptionInvoiceSpecCost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1SubscriptionInvoiceSpecCost(val *CatalogV1alpha1SubscriptionInvoiceSpecCost) *NullableCatalogV1alpha1SubscriptionInvoiceSpecCost {
	return &NullableCatalogV1alpha1SubscriptionInvoiceSpecCost{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1SubscriptionInvoiceSpecCost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1SubscriptionInvoiceSpecCost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


