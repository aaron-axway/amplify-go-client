/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the ApiV1Acl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV1Acl{}

// ApiV1Acl Summarizes an Access Control List (ACL) resource associated with an API Server resource.
type ApiV1Acl struct {
	// Unique id generated by the server.
	Id *string `json:"id,omitempty"`
	// Type of the subject.
	SubjectType *string `json:"subjectType,omitempty"`
	// UUID of the subject.
	SubjectId *string `json:"subjectId,omitempty"`
	// ID of the ACL Resource.
	AclId *string `json:"aclId,omitempty"`
}

// NewApiV1Acl instantiates a new ApiV1Acl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV1Acl() *ApiV1Acl {
	this := ApiV1Acl{}
	var subjectType string = "team"
	this.SubjectType = &subjectType
	return &this
}

// NewApiV1AclWithDefaults instantiates a new ApiV1Acl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV1AclWithDefaults() *ApiV1Acl {
	this := ApiV1Acl{}
	var subjectType string = "team"
	this.SubjectType = &subjectType
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiV1Acl) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Acl) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiV1Acl) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiV1Acl) SetId(v string) {
	o.Id = &v
}

// GetSubjectType returns the SubjectType field value if set, zero value otherwise.
func (o *ApiV1Acl) GetSubjectType() string {
	if o == nil || IsNil(o.SubjectType) {
		var ret string
		return ret
	}
	return *o.SubjectType
}

// GetSubjectTypeOk returns a tuple with the SubjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Acl) GetSubjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectType) {
		return nil, false
	}
	return o.SubjectType, true
}

// HasSubjectType returns a boolean if a field has been set.
func (o *ApiV1Acl) HasSubjectType() bool {
	if o != nil && !IsNil(o.SubjectType) {
		return true
	}

	return false
}

// SetSubjectType gets a reference to the given string and assigns it to the SubjectType field.
func (o *ApiV1Acl) SetSubjectType(v string) {
	o.SubjectType = &v
}

// GetSubjectId returns the SubjectId field value if set, zero value otherwise.
func (o *ApiV1Acl) GetSubjectId() string {
	if o == nil || IsNil(o.SubjectId) {
		var ret string
		return ret
	}
	return *o.SubjectId
}

// GetSubjectIdOk returns a tuple with the SubjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Acl) GetSubjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectId) {
		return nil, false
	}
	return o.SubjectId, true
}

// HasSubjectId returns a boolean if a field has been set.
func (o *ApiV1Acl) HasSubjectId() bool {
	if o != nil && !IsNil(o.SubjectId) {
		return true
	}

	return false
}

// SetSubjectId gets a reference to the given string and assigns it to the SubjectId field.
func (o *ApiV1Acl) SetSubjectId(v string) {
	o.SubjectId = &v
}

// GetAclId returns the AclId field value if set, zero value otherwise.
func (o *ApiV1Acl) GetAclId() string {
	if o == nil || IsNil(o.AclId) {
		var ret string
		return ret
	}
	return *o.AclId
}

// GetAclIdOk returns a tuple with the AclId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1Acl) GetAclIdOk() (*string, bool) {
	if o == nil || IsNil(o.AclId) {
		return nil, false
	}
	return o.AclId, true
}

// HasAclId returns a boolean if a field has been set.
func (o *ApiV1Acl) HasAclId() bool {
	if o != nil && !IsNil(o.AclId) {
		return true
	}

	return false
}

// SetAclId gets a reference to the given string and assigns it to the AclId field.
func (o *ApiV1Acl) SetAclId(v string) {
	o.AclId = &v
}

func (o ApiV1Acl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV1Acl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SubjectType) {
		toSerialize["subjectType"] = o.SubjectType
	}
	if !IsNil(o.SubjectId) {
		toSerialize["subjectId"] = o.SubjectId
	}
	if !IsNil(o.AclId) {
		toSerialize["aclId"] = o.AclId
	}
	return toSerialize, nil
}

type NullableApiV1Acl struct {
	value *ApiV1Acl
	isSet bool
}

func (v NullableApiV1Acl) Get() *ApiV1Acl {
	return v.value
}

func (v *NullableApiV1Acl) Set(val *ApiV1Acl) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV1Acl) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV1Acl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV1Acl(val *ApiV1Acl) *NullableApiV1Acl {
	return &NullableApiV1Acl{value: val, isSet: true}
}

func (v NullableApiV1Acl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV1Acl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


