/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications{}

// CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications Notifications properties for Credentials expiry.
type CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications struct {
	// The days interval at which to send notifications before the Credentials are to expire.
	DaysBefore []int32 `json:"daysBefore,omitempty"`
}

// NewCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications instantiates a new CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications() *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications {
	this := CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications{}
	return &this
}

// NewCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotificationsWithDefaults instantiates a new CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotificationsWithDefaults() *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications {
	this := CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications{}
	return &this
}

// GetDaysBefore returns the DaysBefore field value if set, zero value otherwise.
func (o *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) GetDaysBefore() []int32 {
	if o == nil || IsNil(o.DaysBefore) {
		var ret []int32
		return ret
	}
	return o.DaysBefore
}

// GetDaysBeforeOk returns a tuple with the DaysBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) GetDaysBeforeOk() ([]int32, bool) {
	if o == nil || IsNil(o.DaysBefore) {
		return nil, false
	}
	return o.DaysBefore, true
}

// HasDaysBefore returns a boolean if a field has been set.
func (o *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) HasDaysBefore() bool {
	if o != nil && !IsNil(o.DaysBefore) {
		return true
	}

	return false
}

// SetDaysBefore gets a reference to the given []int32 and assigns it to the DaysBefore field.
func (o *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) SetDaysBefore(v []int32) {
	o.DaysBefore = v
}

func (o CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DaysBefore) {
		toSerialize["daysBefore"] = o.DaysBefore
	}
	return toSerialize, nil
}

type NullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications struct {
	value *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications
	isSet bool
}

func (v NullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) Get() *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications {
	return v.value
}

func (v *NullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) Set(val *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications(val *CatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) *NullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications {
	return &NullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1AuthorizationProfilePoliciesCredentialsExpiryNotifications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


