/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManagementV1alpha1DataplaneSpecApigee type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1DataplaneSpecApigee{}

// ManagementV1alpha1DataplaneSpecApigee The configuration common to all Apigee agents that use this dataplane
type ManagementV1alpha1DataplaneSpecApigee struct {
	Type string `json:"type"`
	// The Project ID on GCP that Apigee is configured in
	ProjectId string `json:"projectId" validate:"regexp=^[a-z][a-z0-9-]{4,28}[a-z0-9]$"`
	// The Developer that will own all Apigee Applications created by the agent
	DeveloperEmail string `json:"developerEmail"`
	// The discovery mode that the Apigee agents should use
	Mode *string `json:"mode,omitempty"`
	// The environment for which the metrics are gathered
	Environment *string `json:"environment,omitempty"`
	MetricsFilter *ManagementV1alpha1DataplaneSpecApigeeMetricsFilter `json:"metricsFilter,omitempty"`
}

type _ManagementV1alpha1DataplaneSpecApigee ManagementV1alpha1DataplaneSpecApigee

// NewManagementV1alpha1DataplaneSpecApigee instantiates a new ManagementV1alpha1DataplaneSpecApigee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1DataplaneSpecApigee(type_ string, projectId string, developerEmail string) *ManagementV1alpha1DataplaneSpecApigee {
	this := ManagementV1alpha1DataplaneSpecApigee{}
	this.Type = type_
	this.ProjectId = projectId
	this.DeveloperEmail = developerEmail
	return &this
}

// NewManagementV1alpha1DataplaneSpecApigeeWithDefaults instantiates a new ManagementV1alpha1DataplaneSpecApigee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1DataplaneSpecApigeeWithDefaults() *ManagementV1alpha1DataplaneSpecApigee {
	this := ManagementV1alpha1DataplaneSpecApigee{}
	return &this
}

// GetType returns the Type field value
func (o *ManagementV1alpha1DataplaneSpecApigee) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSpecApigee) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ManagementV1alpha1DataplaneSpecApigee) SetType(v string) {
	o.Type = v
}

// GetProjectId returns the ProjectId field value
func (o *ManagementV1alpha1DataplaneSpecApigee) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSpecApigee) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ManagementV1alpha1DataplaneSpecApigee) SetProjectId(v string) {
	o.ProjectId = v
}

// GetDeveloperEmail returns the DeveloperEmail field value
func (o *ManagementV1alpha1DataplaneSpecApigee) GetDeveloperEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeveloperEmail
}

// GetDeveloperEmailOk returns a tuple with the DeveloperEmail field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSpecApigee) GetDeveloperEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeveloperEmail, true
}

// SetDeveloperEmail sets field value
func (o *ManagementV1alpha1DataplaneSpecApigee) SetDeveloperEmail(v string) {
	o.DeveloperEmail = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *ManagementV1alpha1DataplaneSpecApigee) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSpecApigee) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *ManagementV1alpha1DataplaneSpecApigee) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *ManagementV1alpha1DataplaneSpecApigee) SetMode(v string) {
	o.Mode = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *ManagementV1alpha1DataplaneSpecApigee) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSpecApigee) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ManagementV1alpha1DataplaneSpecApigee) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *ManagementV1alpha1DataplaneSpecApigee) SetEnvironment(v string) {
	o.Environment = &v
}

// GetMetricsFilter returns the MetricsFilter field value if set, zero value otherwise.
func (o *ManagementV1alpha1DataplaneSpecApigee) GetMetricsFilter() ManagementV1alpha1DataplaneSpecApigeeMetricsFilter {
	if o == nil || IsNil(o.MetricsFilter) {
		var ret ManagementV1alpha1DataplaneSpecApigeeMetricsFilter
		return ret
	}
	return *o.MetricsFilter
}

// GetMetricsFilterOk returns a tuple with the MetricsFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DataplaneSpecApigee) GetMetricsFilterOk() (*ManagementV1alpha1DataplaneSpecApigeeMetricsFilter, bool) {
	if o == nil || IsNil(o.MetricsFilter) {
		return nil, false
	}
	return o.MetricsFilter, true
}

// HasMetricsFilter returns a boolean if a field has been set.
func (o *ManagementV1alpha1DataplaneSpecApigee) HasMetricsFilter() bool {
	if o != nil && !IsNil(o.MetricsFilter) {
		return true
	}

	return false
}

// SetMetricsFilter gets a reference to the given ManagementV1alpha1DataplaneSpecApigeeMetricsFilter and assigns it to the MetricsFilter field.
func (o *ManagementV1alpha1DataplaneSpecApigee) SetMetricsFilter(v ManagementV1alpha1DataplaneSpecApigeeMetricsFilter) {
	o.MetricsFilter = &v
}

func (o ManagementV1alpha1DataplaneSpecApigee) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1DataplaneSpecApigee) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["projectId"] = o.ProjectId
	toSerialize["developerEmail"] = o.DeveloperEmail
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.MetricsFilter) {
		toSerialize["metricsFilter"] = o.MetricsFilter
	}
	return toSerialize, nil
}

func (o *ManagementV1alpha1DataplaneSpecApigee) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"projectId",
		"developerEmail",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagementV1alpha1DataplaneSpecApigee := _ManagementV1alpha1DataplaneSpecApigee{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManagementV1alpha1DataplaneSpecApigee)

	if err != nil {
		return err
	}

	*o = ManagementV1alpha1DataplaneSpecApigee(varManagementV1alpha1DataplaneSpecApigee)

	return err
}

type NullableManagementV1alpha1DataplaneSpecApigee struct {
	value *ManagementV1alpha1DataplaneSpecApigee
	isSet bool
}

func (v NullableManagementV1alpha1DataplaneSpecApigee) Get() *ManagementV1alpha1DataplaneSpecApigee {
	return v.value
}

func (v *NullableManagementV1alpha1DataplaneSpecApigee) Set(val *ManagementV1alpha1DataplaneSpecApigee) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1DataplaneSpecApigee) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1DataplaneSpecApigee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1DataplaneSpecApigee(val *ManagementV1alpha1DataplaneSpecApigee) *NullableManagementV1alpha1DataplaneSpecApigee {
	return &NullableManagementV1alpha1DataplaneSpecApigee{value: val, isSet: true}
}

func (v NullableManagementV1alpha1DataplaneSpecApigee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1DataplaneSpecApigee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


