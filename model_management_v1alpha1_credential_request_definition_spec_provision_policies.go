/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies{}

// ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies Defines the policies applied on the Credentials generated using this definition.
type ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies struct {
	// Defines on if Credentials using this definitions can be renewed.
	Renewable *bool `json:"renewable,omitempty"`
	// Defines on if Credentials can be suspended.
	Suspendable *bool `json:"suspendable,omitempty"`
	Expiry *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry `json:"expiry,omitempty"`
}

// NewManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies instantiates a new ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies() *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies {
	this := ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies{}
	return &this
}

// NewManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesWithDefaults instantiates a new ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesWithDefaults() *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies {
	this := ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies{}
	return &this
}

// GetRenewable returns the Renewable field value if set, zero value otherwise.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) GetRenewable() bool {
	if o == nil || IsNil(o.Renewable) {
		var ret bool
		return ret
	}
	return *o.Renewable
}

// GetRenewableOk returns a tuple with the Renewable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) GetRenewableOk() (*bool, bool) {
	if o == nil || IsNil(o.Renewable) {
		return nil, false
	}
	return o.Renewable, true
}

// HasRenewable returns a boolean if a field has been set.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) HasRenewable() bool {
	if o != nil && !IsNil(o.Renewable) {
		return true
	}

	return false
}

// SetRenewable gets a reference to the given bool and assigns it to the Renewable field.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) SetRenewable(v bool) {
	o.Renewable = &v
}

// GetSuspendable returns the Suspendable field value if set, zero value otherwise.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) GetSuspendable() bool {
	if o == nil || IsNil(o.Suspendable) {
		var ret bool
		return ret
	}
	return *o.Suspendable
}

// GetSuspendableOk returns a tuple with the Suspendable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) GetSuspendableOk() (*bool, bool) {
	if o == nil || IsNil(o.Suspendable) {
		return nil, false
	}
	return o.Suspendable, true
}

// HasSuspendable returns a boolean if a field has been set.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) HasSuspendable() bool {
	if o != nil && !IsNil(o.Suspendable) {
		return true
	}

	return false
}

// SetSuspendable gets a reference to the given bool and assigns it to the Suspendable field.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) SetSuspendable(v bool) {
	o.Suspendable = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) GetExpiry() ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry {
	if o == nil || IsNil(o.Expiry) {
		var ret ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) GetExpiryOk() (*ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry, bool) {
	if o == nil || IsNil(o.Expiry) {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) HasExpiry() bool {
	if o != nil && !IsNil(o.Expiry) {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry and assigns it to the Expiry field.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) SetExpiry(v ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) {
	o.Expiry = &v
}

func (o ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Renewable) {
		toSerialize["renewable"] = o.Renewable
	}
	if !IsNil(o.Suspendable) {
		toSerialize["suspendable"] = o.Suspendable
	}
	if !IsNil(o.Expiry) {
		toSerialize["expiry"] = o.Expiry
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies struct {
	value *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies
	isSet bool
}

func (v NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) Get() *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies {
	return v.value
}

func (v *NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) Set(val *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies(val *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) *NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies {
	return &NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies{value: val, isSet: true}
}

func (v NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPolicies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


