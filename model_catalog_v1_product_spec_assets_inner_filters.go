/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogV1ProductSpecAssetsInnerFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1ProductSpecAssetsInnerFilters{}

// CatalogV1ProductSpecAssetsInnerFilters Filters what AssetRelease the Product points to.
type CatalogV1ProductSpecAssetsInnerFilters struct {
	// The AssetRelease version to use. Examples:   - 1.0.1 for a specific asset release version   - 1.* for all minor and patch versions of version 1   - 1.2.* for all the patch version for version 1.2
	Version *string `json:"version,omitempty" validate:"regexp=^(0|([1-9][0-9]*)|\\\\*)(\\\\.(0|([1-9][0-9]*)|\\\\*)){0,2}$"`
}

// NewCatalogV1ProductSpecAssetsInnerFilters instantiates a new CatalogV1ProductSpecAssetsInnerFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1ProductSpecAssetsInnerFilters() *CatalogV1ProductSpecAssetsInnerFilters {
	this := CatalogV1ProductSpecAssetsInnerFilters{}
	return &this
}

// NewCatalogV1ProductSpecAssetsInnerFiltersWithDefaults instantiates a new CatalogV1ProductSpecAssetsInnerFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1ProductSpecAssetsInnerFiltersWithDefaults() *CatalogV1ProductSpecAssetsInnerFilters {
	this := CatalogV1ProductSpecAssetsInnerFilters{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CatalogV1ProductSpecAssetsInnerFilters) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1ProductSpecAssetsInnerFilters) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CatalogV1ProductSpecAssetsInnerFilters) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CatalogV1ProductSpecAssetsInnerFilters) SetVersion(v string) {
	o.Version = &v
}

func (o CatalogV1ProductSpecAssetsInnerFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1ProductSpecAssetsInnerFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableCatalogV1ProductSpecAssetsInnerFilters struct {
	value *CatalogV1ProductSpecAssetsInnerFilters
	isSet bool
}

func (v NullableCatalogV1ProductSpecAssetsInnerFilters) Get() *CatalogV1ProductSpecAssetsInnerFilters {
	return v.value
}

func (v *NullableCatalogV1ProductSpecAssetsInnerFilters) Set(val *CatalogV1ProductSpecAssetsInnerFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1ProductSpecAssetsInnerFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1ProductSpecAssetsInnerFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1ProductSpecAssetsInnerFilters(val *CatalogV1ProductSpecAssetsInnerFilters) *NullableCatalogV1ProductSpecAssetsInnerFilters {
	return &NullableCatalogV1ProductSpecAssetsInnerFilters{value: val, isSet: true}
}

func (v NullableCatalogV1ProductSpecAssetsInnerFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1ProductSpecAssetsInnerFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


