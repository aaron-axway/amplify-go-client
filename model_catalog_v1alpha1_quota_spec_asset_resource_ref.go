/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogV1alpha1QuotaSpecAssetResourceRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1QuotaSpecAssetResourceRef{}

// CatalogV1alpha1QuotaSpecAssetResourceRef struct for CatalogV1alpha1QuotaSpecAssetResourceRef
type CatalogV1alpha1QuotaSpecAssetResourceRef struct {
	Kind string `json:"kind"`
	Name *string `json:"name,omitempty"`
}

type _CatalogV1alpha1QuotaSpecAssetResourceRef CatalogV1alpha1QuotaSpecAssetResourceRef

// NewCatalogV1alpha1QuotaSpecAssetResourceRef instantiates a new CatalogV1alpha1QuotaSpecAssetResourceRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1QuotaSpecAssetResourceRef(kind string) *CatalogV1alpha1QuotaSpecAssetResourceRef {
	this := CatalogV1alpha1QuotaSpecAssetResourceRef{}
	this.Kind = kind
	return &this
}

// NewCatalogV1alpha1QuotaSpecAssetResourceRefWithDefaults instantiates a new CatalogV1alpha1QuotaSpecAssetResourceRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1QuotaSpecAssetResourceRefWithDefaults() *CatalogV1alpha1QuotaSpecAssetResourceRef {
	this := CatalogV1alpha1QuotaSpecAssetResourceRef{}
	return &this
}

// GetKind returns the Kind field value
func (o *CatalogV1alpha1QuotaSpecAssetResourceRef) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1QuotaSpecAssetResourceRef) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *CatalogV1alpha1QuotaSpecAssetResourceRef) SetKind(v string) {
	o.Kind = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogV1alpha1QuotaSpecAssetResourceRef) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1QuotaSpecAssetResourceRef) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogV1alpha1QuotaSpecAssetResourceRef) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogV1alpha1QuotaSpecAssetResourceRef) SetName(v string) {
	o.Name = &v
}

func (o CatalogV1alpha1QuotaSpecAssetResourceRef) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1QuotaSpecAssetResourceRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kind"] = o.Kind
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

func (o *CatalogV1alpha1QuotaSpecAssetResourceRef) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kind",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogV1alpha1QuotaSpecAssetResourceRef := _CatalogV1alpha1QuotaSpecAssetResourceRef{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogV1alpha1QuotaSpecAssetResourceRef)

	if err != nil {
		return err
	}

	*o = CatalogV1alpha1QuotaSpecAssetResourceRef(varCatalogV1alpha1QuotaSpecAssetResourceRef)

	return err
}

type NullableCatalogV1alpha1QuotaSpecAssetResourceRef struct {
	value *CatalogV1alpha1QuotaSpecAssetResourceRef
	isSet bool
}

func (v NullableCatalogV1alpha1QuotaSpecAssetResourceRef) Get() *CatalogV1alpha1QuotaSpecAssetResourceRef {
	return v.value
}

func (v *NullableCatalogV1alpha1QuotaSpecAssetResourceRef) Set(val *CatalogV1alpha1QuotaSpecAssetResourceRef) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1QuotaSpecAssetResourceRef) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1QuotaSpecAssetResourceRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1QuotaSpecAssetResourceRef(val *CatalogV1alpha1QuotaSpecAssetResourceRef) *NullableCatalogV1alpha1QuotaSpecAssetResourceRef {
	return &NullableCatalogV1alpha1QuotaSpecAssetResourceRef{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1QuotaSpecAssetResourceRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1QuotaSpecAssetResourceRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


