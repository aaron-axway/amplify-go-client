/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the ApiV1LanguagesMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV1LanguagesMetadata{}

// ApiV1LanguagesMetadata Information about resource languages
type ApiV1LanguagesMetadata struct {
	// Additional languages available for the resource instance.
	Additional []ApiV1LanguagesMetadataAdditionalInner `json:"additional,omitempty"`
	Audit *ApiV1AuditMetadata `json:"audit,omitempty"`
}

// NewApiV1LanguagesMetadata instantiates a new ApiV1LanguagesMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV1LanguagesMetadata() *ApiV1LanguagesMetadata {
	this := ApiV1LanguagesMetadata{}
	return &this
}

// NewApiV1LanguagesMetadataWithDefaults instantiates a new ApiV1LanguagesMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV1LanguagesMetadataWithDefaults() *ApiV1LanguagesMetadata {
	this := ApiV1LanguagesMetadata{}
	return &this
}

// GetAdditional returns the Additional field value if set, zero value otherwise.
func (o *ApiV1LanguagesMetadata) GetAdditional() []ApiV1LanguagesMetadataAdditionalInner {
	if o == nil || IsNil(o.Additional) {
		var ret []ApiV1LanguagesMetadataAdditionalInner
		return ret
	}
	return o.Additional
}

// GetAdditionalOk returns a tuple with the Additional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1LanguagesMetadata) GetAdditionalOk() ([]ApiV1LanguagesMetadataAdditionalInner, bool) {
	if o == nil || IsNil(o.Additional) {
		return nil, false
	}
	return o.Additional, true
}

// HasAdditional returns a boolean if a field has been set.
func (o *ApiV1LanguagesMetadata) HasAdditional() bool {
	if o != nil && !IsNil(o.Additional) {
		return true
	}

	return false
}

// SetAdditional gets a reference to the given []ApiV1LanguagesMetadataAdditionalInner and assigns it to the Additional field.
func (o *ApiV1LanguagesMetadata) SetAdditional(v []ApiV1LanguagesMetadataAdditionalInner) {
	o.Additional = v
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *ApiV1LanguagesMetadata) GetAudit() ApiV1AuditMetadata {
	if o == nil || IsNil(o.Audit) {
		var ret ApiV1AuditMetadata
		return ret
	}
	return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1LanguagesMetadata) GetAuditOk() (*ApiV1AuditMetadata, bool) {
	if o == nil || IsNil(o.Audit) {
		return nil, false
	}
	return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *ApiV1LanguagesMetadata) HasAudit() bool {
	if o != nil && !IsNil(o.Audit) {
		return true
	}

	return false
}

// SetAudit gets a reference to the given ApiV1AuditMetadata and assigns it to the Audit field.
func (o *ApiV1LanguagesMetadata) SetAudit(v ApiV1AuditMetadata) {
	o.Audit = &v
}

func (o ApiV1LanguagesMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV1LanguagesMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Additional) {
		toSerialize["additional"] = o.Additional
	}
	if !IsNil(o.Audit) {
		toSerialize["audit"] = o.Audit
	}
	return toSerialize, nil
}

type NullableApiV1LanguagesMetadata struct {
	value *ApiV1LanguagesMetadata
	isSet bool
}

func (v NullableApiV1LanguagesMetadata) Get() *ApiV1LanguagesMetadata {
	return v.value
}

func (v *NullableApiV1LanguagesMetadata) Set(val *ApiV1LanguagesMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV1LanguagesMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV1LanguagesMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV1LanguagesMetadata(val *ApiV1LanguagesMetadata) *NullableApiV1LanguagesMetadata {
	return &NullableApiV1LanguagesMetadata{value: val, isSet: true}
}

func (v NullableApiV1LanguagesMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV1LanguagesMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


