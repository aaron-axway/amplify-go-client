/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
)

// checks if the CatalogV1ProductReferencesMarketplacesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1ProductReferencesMarketplacesInner{}

// CatalogV1ProductReferencesMarketplacesInner struct for CatalogV1ProductReferencesMarketplacesInner
type CatalogV1ProductReferencesMarketplacesInner struct {
	// The Marketplace reference.
	Name *string `json:"name,omitempty"`
	Ratings *CatalogV1ProductReferencesMarketplacesInnerRatings `json:"ratings,omitempty"`
	// The PublishedProduct reference.
	PublishedProduct *string `json:"publishedProduct,omitempty"`
}

// NewCatalogV1ProductReferencesMarketplacesInner instantiates a new CatalogV1ProductReferencesMarketplacesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1ProductReferencesMarketplacesInner() *CatalogV1ProductReferencesMarketplacesInner {
	this := CatalogV1ProductReferencesMarketplacesInner{}
	return &this
}

// NewCatalogV1ProductReferencesMarketplacesInnerWithDefaults instantiates a new CatalogV1ProductReferencesMarketplacesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1ProductReferencesMarketplacesInnerWithDefaults() *CatalogV1ProductReferencesMarketplacesInner {
	this := CatalogV1ProductReferencesMarketplacesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogV1ProductReferencesMarketplacesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1ProductReferencesMarketplacesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogV1ProductReferencesMarketplacesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogV1ProductReferencesMarketplacesInner) SetName(v string) {
	o.Name = &v
}

// GetRatings returns the Ratings field value if set, zero value otherwise.
func (o *CatalogV1ProductReferencesMarketplacesInner) GetRatings() CatalogV1ProductReferencesMarketplacesInnerRatings {
	if o == nil || IsNil(o.Ratings) {
		var ret CatalogV1ProductReferencesMarketplacesInnerRatings
		return ret
	}
	return *o.Ratings
}

// GetRatingsOk returns a tuple with the Ratings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1ProductReferencesMarketplacesInner) GetRatingsOk() (*CatalogV1ProductReferencesMarketplacesInnerRatings, bool) {
	if o == nil || IsNil(o.Ratings) {
		return nil, false
	}
	return o.Ratings, true
}

// HasRatings returns a boolean if a field has been set.
func (o *CatalogV1ProductReferencesMarketplacesInner) HasRatings() bool {
	if o != nil && !IsNil(o.Ratings) {
		return true
	}

	return false
}

// SetRatings gets a reference to the given CatalogV1ProductReferencesMarketplacesInnerRatings and assigns it to the Ratings field.
func (o *CatalogV1ProductReferencesMarketplacesInner) SetRatings(v CatalogV1ProductReferencesMarketplacesInnerRatings) {
	o.Ratings = &v
}

// GetPublishedProduct returns the PublishedProduct field value if set, zero value otherwise.
func (o *CatalogV1ProductReferencesMarketplacesInner) GetPublishedProduct() string {
	if o == nil || IsNil(o.PublishedProduct) {
		var ret string
		return ret
	}
	return *o.PublishedProduct
}

// GetPublishedProductOk returns a tuple with the PublishedProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1ProductReferencesMarketplacesInner) GetPublishedProductOk() (*string, bool) {
	if o == nil || IsNil(o.PublishedProduct) {
		return nil, false
	}
	return o.PublishedProduct, true
}

// HasPublishedProduct returns a boolean if a field has been set.
func (o *CatalogV1ProductReferencesMarketplacesInner) HasPublishedProduct() bool {
	if o != nil && !IsNil(o.PublishedProduct) {
		return true
	}

	return false
}

// SetPublishedProduct gets a reference to the given string and assigns it to the PublishedProduct field.
func (o *CatalogV1ProductReferencesMarketplacesInner) SetPublishedProduct(v string) {
	o.PublishedProduct = &v
}

func (o CatalogV1ProductReferencesMarketplacesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1ProductReferencesMarketplacesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Ratings) {
		toSerialize["ratings"] = o.Ratings
	}
	if !IsNil(o.PublishedProduct) {
		toSerialize["publishedProduct"] = o.PublishedProduct
	}
	return toSerialize, nil
}

type NullableCatalogV1ProductReferencesMarketplacesInner struct {
	value *CatalogV1ProductReferencesMarketplacesInner
	isSet bool
}

func (v NullableCatalogV1ProductReferencesMarketplacesInner) Get() *CatalogV1ProductReferencesMarketplacesInner {
	return v.value
}

func (v *NullableCatalogV1ProductReferencesMarketplacesInner) Set(val *CatalogV1ProductReferencesMarketplacesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1ProductReferencesMarketplacesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1ProductReferencesMarketplacesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1ProductReferencesMarketplacesInner(val *CatalogV1ProductReferencesMarketplacesInner) *NullableCatalogV1ProductReferencesMarketplacesInner {
	return &NullableCatalogV1ProductReferencesMarketplacesInner{value: val, isSet: true}
}

func (v NullableCatalogV1ProductReferencesMarketplacesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1ProductReferencesMarketplacesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


