/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManagementV1alpha1ResourceHookSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1ResourceHookSpec{}

// ManagementV1alpha1ResourceHookSpec struct for ManagementV1alpha1ResourceHookSpec
type ManagementV1alpha1ResourceHookSpec struct {
	Triggers []ManagementV1alpha1ResourceHookSpecTriggersInner `json:"triggers"`
	// List of Webhook kind resource names that dictates what webhooks will be invoked on matching triggers.
	Webhooks []string `json:"webhooks"`
}

type _ManagementV1alpha1ResourceHookSpec ManagementV1alpha1ResourceHookSpec

// NewManagementV1alpha1ResourceHookSpec instantiates a new ManagementV1alpha1ResourceHookSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1ResourceHookSpec(triggers []ManagementV1alpha1ResourceHookSpecTriggersInner, webhooks []string) *ManagementV1alpha1ResourceHookSpec {
	this := ManagementV1alpha1ResourceHookSpec{}
	this.Triggers = triggers
	this.Webhooks = webhooks
	return &this
}

// NewManagementV1alpha1ResourceHookSpecWithDefaults instantiates a new ManagementV1alpha1ResourceHookSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1ResourceHookSpecWithDefaults() *ManagementV1alpha1ResourceHookSpec {
	this := ManagementV1alpha1ResourceHookSpec{}
	return &this
}

// GetTriggers returns the Triggers field value
func (o *ManagementV1alpha1ResourceHookSpec) GetTriggers() []ManagementV1alpha1ResourceHookSpecTriggersInner {
	if o == nil {
		var ret []ManagementV1alpha1ResourceHookSpecTriggersInner
		return ret
	}

	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceHookSpec) GetTriggersOk() ([]ManagementV1alpha1ResourceHookSpecTriggersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Triggers, true
}

// SetTriggers sets field value
func (o *ManagementV1alpha1ResourceHookSpec) SetTriggers(v []ManagementV1alpha1ResourceHookSpecTriggersInner) {
	o.Triggers = v
}

// GetWebhooks returns the Webhooks field value
func (o *ManagementV1alpha1ResourceHookSpec) GetWebhooks() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ResourceHookSpec) GetWebhooksOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Webhooks, true
}

// SetWebhooks sets field value
func (o *ManagementV1alpha1ResourceHookSpec) SetWebhooks(v []string) {
	o.Webhooks = v
}

func (o ManagementV1alpha1ResourceHookSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1ResourceHookSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["triggers"] = o.Triggers
	toSerialize["webhooks"] = o.Webhooks
	return toSerialize, nil
}

func (o *ManagementV1alpha1ResourceHookSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"triggers",
		"webhooks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagementV1alpha1ResourceHookSpec := _ManagementV1alpha1ResourceHookSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManagementV1alpha1ResourceHookSpec)

	if err != nil {
		return err
	}

	*o = ManagementV1alpha1ResourceHookSpec(varManagementV1alpha1ResourceHookSpec)

	return err
}

type NullableManagementV1alpha1ResourceHookSpec struct {
	value *ManagementV1alpha1ResourceHookSpec
	isSet bool
}

func (v NullableManagementV1alpha1ResourceHookSpec) Get() *ManagementV1alpha1ResourceHookSpec {
	return v.value
}

func (v *NullableManagementV1alpha1ResourceHookSpec) Set(val *ManagementV1alpha1ResourceHookSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1ResourceHookSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1ResourceHookSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1ResourceHookSpec(val *ManagementV1alpha1ResourceHookSpec) *NullableManagementV1alpha1ResourceHookSpec {
	return &NullableManagementV1alpha1ResourceHookSpec{value: val, isSet: true}
}

func (v NullableManagementV1alpha1ResourceHookSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1ResourceHookSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


