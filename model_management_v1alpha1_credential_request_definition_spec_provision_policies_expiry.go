/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry{}

// ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry Expiry properties for Credentials linked to this definition.
type ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry struct {
	// The number of days after the Credentials are considered to be expired.
	Period int32 `json:"period"`
	// The actions taken when the Credentials expire.
	Actions []ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiryActionsInner `json:"actions,omitempty"`
}

type _ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry

// NewManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry instantiates a new ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry(period int32) *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry {
	this := ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry{}
	this.Period = period
	return &this
}

// NewManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiryWithDefaults instantiates a new ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiryWithDefaults() *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry {
	this := ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry{}
	return &this
}

// GetPeriod returns the Period field value
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) GetPeriod() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) GetPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) SetPeriod(v int32) {
	o.Period = v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) GetActions() []ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiryActionsInner {
	if o == nil || IsNil(o.Actions) {
		var ret []ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiryActionsInner
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) GetActionsOk() ([]ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiryActionsInner, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiryActionsInner and assigns it to the Actions field.
func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) SetActions(v []ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiryActionsInner) {
	o.Actions = v
}

func (o ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["period"] = o.Period
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	return toSerialize, nil
}

func (o *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"period",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry := _ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry)

	if err != nil {
		return err
	}

	*o = ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry(varManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry)

	return err
}

type NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry struct {
	value *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry
	isSet bool
}

func (v NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) Get() *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry {
	return v.value
}

func (v *NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) Set(val *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry(val *ManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) *NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry {
	return &NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry{value: val, isSet: true}
}

func (v NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1CredentialRequestDefinitionSpecProvisionPoliciesExpiry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


