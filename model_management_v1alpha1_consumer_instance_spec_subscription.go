/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManagementV1alpha1ConsumerInstanceSpecSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1ConsumerInstanceSpecSubscription{}

// ManagementV1alpha1ConsumerInstanceSpecSubscription struct for ManagementV1alpha1ConsumerInstanceSpecSubscription
type ManagementV1alpha1ConsumerInstanceSpecSubscription struct {
	// Defines if subscriptions are allowed on the Catalog Item.
	Enabled *bool `json:"enabled,omitempty"`
	// Defines if subscriptions need to be manually approved.
	AutoSubscribe *bool `json:"autoSubscribe,omitempty"`
	// The name of a ConsumerSubscriptionDefinition kind that defines the schema and possible webhooks to get invoked.
	SubscriptionDefinition *string `json:"subscriptionDefinition,omitempty"`
}

// NewManagementV1alpha1ConsumerInstanceSpecSubscription instantiates a new ManagementV1alpha1ConsumerInstanceSpecSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1ConsumerInstanceSpecSubscription() *ManagementV1alpha1ConsumerInstanceSpecSubscription {
	this := ManagementV1alpha1ConsumerInstanceSpecSubscription{}
	return &this
}

// NewManagementV1alpha1ConsumerInstanceSpecSubscriptionWithDefaults instantiates a new ManagementV1alpha1ConsumerInstanceSpecSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1ConsumerInstanceSpecSubscriptionWithDefaults() *ManagementV1alpha1ConsumerInstanceSpecSubscription {
	this := ManagementV1alpha1ConsumerInstanceSpecSubscription{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAutoSubscribe returns the AutoSubscribe field value if set, zero value otherwise.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) GetAutoSubscribe() bool {
	if o == nil || IsNil(o.AutoSubscribe) {
		var ret bool
		return ret
	}
	return *o.AutoSubscribe
}

// GetAutoSubscribeOk returns a tuple with the AutoSubscribe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) GetAutoSubscribeOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoSubscribe) {
		return nil, false
	}
	return o.AutoSubscribe, true
}

// HasAutoSubscribe returns a boolean if a field has been set.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) HasAutoSubscribe() bool {
	if o != nil && !IsNil(o.AutoSubscribe) {
		return true
	}

	return false
}

// SetAutoSubscribe gets a reference to the given bool and assigns it to the AutoSubscribe field.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) SetAutoSubscribe(v bool) {
	o.AutoSubscribe = &v
}

// GetSubscriptionDefinition returns the SubscriptionDefinition field value if set, zero value otherwise.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) GetSubscriptionDefinition() string {
	if o == nil || IsNil(o.SubscriptionDefinition) {
		var ret string
		return ret
	}
	return *o.SubscriptionDefinition
}

// GetSubscriptionDefinitionOk returns a tuple with the SubscriptionDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) GetSubscriptionDefinitionOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionDefinition) {
		return nil, false
	}
	return o.SubscriptionDefinition, true
}

// HasSubscriptionDefinition returns a boolean if a field has been set.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) HasSubscriptionDefinition() bool {
	if o != nil && !IsNil(o.SubscriptionDefinition) {
		return true
	}

	return false
}

// SetSubscriptionDefinition gets a reference to the given string and assigns it to the SubscriptionDefinition field.
func (o *ManagementV1alpha1ConsumerInstanceSpecSubscription) SetSubscriptionDefinition(v string) {
	o.SubscriptionDefinition = &v
}

func (o ManagementV1alpha1ConsumerInstanceSpecSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1ConsumerInstanceSpecSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.AutoSubscribe) {
		toSerialize["autoSubscribe"] = o.AutoSubscribe
	}
	if !IsNil(o.SubscriptionDefinition) {
		toSerialize["subscriptionDefinition"] = o.SubscriptionDefinition
	}
	return toSerialize, nil
}

type NullableManagementV1alpha1ConsumerInstanceSpecSubscription struct {
	value *ManagementV1alpha1ConsumerInstanceSpecSubscription
	isSet bool
}

func (v NullableManagementV1alpha1ConsumerInstanceSpecSubscription) Get() *ManagementV1alpha1ConsumerInstanceSpecSubscription {
	return v.value
}

func (v *NullableManagementV1alpha1ConsumerInstanceSpecSubscription) Set(val *ManagementV1alpha1ConsumerInstanceSpecSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1ConsumerInstanceSpecSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1ConsumerInstanceSpecSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1ConsumerInstanceSpecSubscription(val *ManagementV1alpha1ConsumerInstanceSpecSubscription) *NullableManagementV1alpha1ConsumerInstanceSpecSubscription {
	return &NullableManagementV1alpha1ConsumerInstanceSpecSubscription{value: val, isSet: true}
}

func (v NullableManagementV1alpha1ConsumerInstanceSpecSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1ConsumerInstanceSpecSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


