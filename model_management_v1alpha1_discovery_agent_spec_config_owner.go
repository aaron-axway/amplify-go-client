/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package amplify

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ManagementV1alpha1DiscoveryAgentSpecConfigOwner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagementV1alpha1DiscoveryAgentSpecConfigOwner{}

// ManagementV1alpha1DiscoveryAgentSpecConfigOwner Owner of the resources that the agent discovers.
type ManagementV1alpha1DiscoveryAgentSpecConfigOwner struct {
	// The type of the owner. Defaults to team if not present.
	Type *string `json:"type,omitempty"`
	// Id of the owner of the resource.
	Id string `json:"id"`
}

type _ManagementV1alpha1DiscoveryAgentSpecConfigOwner ManagementV1alpha1DiscoveryAgentSpecConfigOwner

// NewManagementV1alpha1DiscoveryAgentSpecConfigOwner instantiates a new ManagementV1alpha1DiscoveryAgentSpecConfigOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagementV1alpha1DiscoveryAgentSpecConfigOwner(id string) *ManagementV1alpha1DiscoveryAgentSpecConfigOwner {
	this := ManagementV1alpha1DiscoveryAgentSpecConfigOwner{}
	var type_ string = "team"
	this.Type = &type_
	this.Id = id
	return &this
}

// NewManagementV1alpha1DiscoveryAgentSpecConfigOwnerWithDefaults instantiates a new ManagementV1alpha1DiscoveryAgentSpecConfigOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagementV1alpha1DiscoveryAgentSpecConfigOwnerWithDefaults() *ManagementV1alpha1DiscoveryAgentSpecConfigOwner {
	this := ManagementV1alpha1DiscoveryAgentSpecConfigOwner{}
	var type_ string = "team"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value
func (o *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) SetId(v string) {
	o.Id = v
}

func (o ManagementV1alpha1DiscoveryAgentSpecConfigOwner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagementV1alpha1DiscoveryAgentSpecConfigOwner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagementV1alpha1DiscoveryAgentSpecConfigOwner := _ManagementV1alpha1DiscoveryAgentSpecConfigOwner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varManagementV1alpha1DiscoveryAgentSpecConfigOwner)

	if err != nil {
		return err
	}

	*o = ManagementV1alpha1DiscoveryAgentSpecConfigOwner(varManagementV1alpha1DiscoveryAgentSpecConfigOwner)

	return err
}

type NullableManagementV1alpha1DiscoveryAgentSpecConfigOwner struct {
	value *ManagementV1alpha1DiscoveryAgentSpecConfigOwner
	isSet bool
}

func (v NullableManagementV1alpha1DiscoveryAgentSpecConfigOwner) Get() *ManagementV1alpha1DiscoveryAgentSpecConfigOwner {
	return v.value
}

func (v *NullableManagementV1alpha1DiscoveryAgentSpecConfigOwner) Set(val *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableManagementV1alpha1DiscoveryAgentSpecConfigOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableManagementV1alpha1DiscoveryAgentSpecConfigOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagementV1alpha1DiscoveryAgentSpecConfigOwner(val *ManagementV1alpha1DiscoveryAgentSpecConfigOwner) *NullableManagementV1alpha1DiscoveryAgentSpecConfigOwner {
	return &NullableManagementV1alpha1DiscoveryAgentSpecConfigOwner{value: val, isSet: true}
}

func (v NullableManagementV1alpha1DiscoveryAgentSpecConfigOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagementV1alpha1DiscoveryAgentSpecConfigOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


