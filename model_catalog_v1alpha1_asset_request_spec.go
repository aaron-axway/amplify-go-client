/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CatalogV1alpha1AssetRequestSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1AssetRequestSpec{}

// CatalogV1alpha1AssetRequestSpec struct for CatalogV1alpha1AssetRequestSpec
type CatalogV1alpha1AssetRequestSpec struct {
	Data map[string]interface{} `json:"data"`
	AssetResource string `json:"assetResource"`
	// reference to the Subscription to be used to access the Asset Resource.
	Subscription *string `json:"subscription,omitempty"`
	// The AssetRequest from which this resource is being migrated from. Reference must be in the same Application.
	AssetRequest *string `json:"assetRequest,omitempty"`
}

type _CatalogV1alpha1AssetRequestSpec CatalogV1alpha1AssetRequestSpec

// NewCatalogV1alpha1AssetRequestSpec instantiates a new CatalogV1alpha1AssetRequestSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1AssetRequestSpec(data map[string]interface{}, assetResource string) *CatalogV1alpha1AssetRequestSpec {
	this := CatalogV1alpha1AssetRequestSpec{}
	this.Data = data
	this.AssetResource = assetResource
	return &this
}

// NewCatalogV1alpha1AssetRequestSpecWithDefaults instantiates a new CatalogV1alpha1AssetRequestSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1AssetRequestSpecWithDefaults() *CatalogV1alpha1AssetRequestSpec {
	this := CatalogV1alpha1AssetRequestSpec{}
	return &this
}

// GetData returns the Data field value
func (o *CatalogV1alpha1AssetRequestSpec) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1AssetRequestSpec) GetDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *CatalogV1alpha1AssetRequestSpec) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetAssetResource returns the AssetResource field value
func (o *CatalogV1alpha1AssetRequestSpec) GetAssetResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetResource
}

// GetAssetResourceOk returns a tuple with the AssetResource field value
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1AssetRequestSpec) GetAssetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetResource, true
}

// SetAssetResource sets field value
func (o *CatalogV1alpha1AssetRequestSpec) SetAssetResource(v string) {
	o.AssetResource = v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *CatalogV1alpha1AssetRequestSpec) GetSubscription() string {
	if o == nil || IsNil(o.Subscription) {
		var ret string
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1AssetRequestSpec) GetSubscriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *CatalogV1alpha1AssetRequestSpec) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given string and assigns it to the Subscription field.
func (o *CatalogV1alpha1AssetRequestSpec) SetSubscription(v string) {
	o.Subscription = &v
}

// GetAssetRequest returns the AssetRequest field value if set, zero value otherwise.
func (o *CatalogV1alpha1AssetRequestSpec) GetAssetRequest() string {
	if o == nil || IsNil(o.AssetRequest) {
		var ret string
		return ret
	}
	return *o.AssetRequest
}

// GetAssetRequestOk returns a tuple with the AssetRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1AssetRequestSpec) GetAssetRequestOk() (*string, bool) {
	if o == nil || IsNil(o.AssetRequest) {
		return nil, false
	}
	return o.AssetRequest, true
}

// HasAssetRequest returns a boolean if a field has been set.
func (o *CatalogV1alpha1AssetRequestSpec) HasAssetRequest() bool {
	if o != nil && !IsNil(o.AssetRequest) {
		return true
	}

	return false
}

// SetAssetRequest gets a reference to the given string and assigns it to the AssetRequest field.
func (o *CatalogV1alpha1AssetRequestSpec) SetAssetRequest(v string) {
	o.AssetRequest = &v
}

func (o CatalogV1alpha1AssetRequestSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1AssetRequestSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["assetResource"] = o.AssetResource
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	if !IsNil(o.AssetRequest) {
		toSerialize["assetRequest"] = o.AssetRequest
	}
	return toSerialize, nil
}

func (o *CatalogV1alpha1AssetRequestSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"assetResource",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCatalogV1alpha1AssetRequestSpec := _CatalogV1alpha1AssetRequestSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCatalogV1alpha1AssetRequestSpec)

	if err != nil {
		return err
	}

	*o = CatalogV1alpha1AssetRequestSpec(varCatalogV1alpha1AssetRequestSpec)

	return err
}

type NullableCatalogV1alpha1AssetRequestSpec struct {
	value *CatalogV1alpha1AssetRequestSpec
	isSet bool
}

func (v NullableCatalogV1alpha1AssetRequestSpec) Get() *CatalogV1alpha1AssetRequestSpec {
	return v.value
}

func (v *NullableCatalogV1alpha1AssetRequestSpec) Set(val *CatalogV1alpha1AssetRequestSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1AssetRequestSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1AssetRequestSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1AssetRequestSpec(val *CatalogV1alpha1AssetRequestSpec) *NullableCatalogV1alpha1AssetRequestSpec {
	return &NullableCatalogV1alpha1AssetRequestSpec{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1AssetRequestSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1AssetRequestSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


