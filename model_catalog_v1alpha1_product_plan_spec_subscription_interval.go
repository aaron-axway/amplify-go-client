/*
AMPLIFY Central API v0.347

APIs to manage AMPLIFY Central configuration resources.

API version: 0.347.0
Contact: support@axway.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogV1alpha1ProductPlanSpecSubscriptionInterval type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogV1alpha1ProductPlanSpecSubscriptionInterval{}

// CatalogV1alpha1ProductPlanSpecSubscriptionInterval The subscription interval
type CatalogV1alpha1ProductPlanSpecSubscriptionInterval struct {
	// The type of the interval
	Type *string `json:"type,omitempty"`
	// The subscription interval length
	Length *float32 `json:"length,omitempty"`
}

// NewCatalogV1alpha1ProductPlanSpecSubscriptionInterval instantiates a new CatalogV1alpha1ProductPlanSpecSubscriptionInterval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogV1alpha1ProductPlanSpecSubscriptionInterval() *CatalogV1alpha1ProductPlanSpecSubscriptionInterval {
	this := CatalogV1alpha1ProductPlanSpecSubscriptionInterval{}
	return &this
}

// NewCatalogV1alpha1ProductPlanSpecSubscriptionIntervalWithDefaults instantiates a new CatalogV1alpha1ProductPlanSpecSubscriptionInterval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogV1alpha1ProductPlanSpecSubscriptionIntervalWithDefaults() *CatalogV1alpha1ProductPlanSpecSubscriptionInterval {
	this := CatalogV1alpha1ProductPlanSpecSubscriptionInterval{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) SetType(v string) {
	o.Type = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) GetLength() float32 {
	if o == nil || IsNil(o.Length) {
		var ret float32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) GetLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given float32 and assigns it to the Length field.
func (o *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) SetLength(v float32) {
	o.Length = &v
}

func (o CatalogV1alpha1ProductPlanSpecSubscriptionInterval) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogV1alpha1ProductPlanSpecSubscriptionInterval) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	return toSerialize, nil
}

type NullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval struct {
	value *CatalogV1alpha1ProductPlanSpecSubscriptionInterval
	isSet bool
}

func (v NullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval) Get() *CatalogV1alpha1ProductPlanSpecSubscriptionInterval {
	return v.value
}

func (v *NullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval) Set(val *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval(val *CatalogV1alpha1ProductPlanSpecSubscriptionInterval) *NullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval {
	return &NullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval{value: val, isSet: true}
}

func (v NullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogV1alpha1ProductPlanSpecSubscriptionInterval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


